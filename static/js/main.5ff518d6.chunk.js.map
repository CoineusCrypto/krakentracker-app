{"version":3,"sources":["theme.js","images/logo.svg","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","utils/index.js","components/TokenListItem.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","KrakenTracker.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","Math","pow","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","_ref","chain_id","pair_address","concat","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","_useGetTokenQuery","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","_Fragment","PairDetails","_token_list$tokens$ne","token_list","tokens","dexscreenerPair","undefined","p","map","pair","toLowerCase","pairAddress","findPair","Markets","item","xs","classes","_useState","useState","_useState2","_slicedToArray","snackbarOpen","setSnackBarOpen","getColorClass","value","_data$baseToken","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","secondaryAction","IconButton","edge","text","callback","navigator","clipboard","writeText","then","err","ContentCopyIcon","primaryTypographyProps","fontSize","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","Snackbar","onClose","autoHideDuration","Alert","severity","sx","variant","getDexLabel","id","List","_pair$liquidity","dexId","secondaryTypographyProps","TokenListItem","_wallet$staked$networ","_wallet$staked$networ2","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","detailsLabel","setOpen","balances","Paper","marginBottom","inUSD","staked","paddingTop","fuse","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","BigNumber","plus","sub","minus","dividedBy","getCNSEarned","initialState","address","chain","type","info","avax","bnb","eth","lp","prices","totals","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","Object","entries","_ref2","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","configureStore","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","resp","catch","req","request","add","execute","all","getUserBalances","wallet_address","_store$coineus","store","getState","web3BSC","Web3","srg_contract","Contract","IERC20_ABI","callsBSC","getBalance","methods","balanceOf","tokens_bnb","token","contract","push","_resp","bnb_balance","srg_balance","dispatch","i","decimals","getBNB","web3ETH","bbks_contract","coineus_abi","callsETH","_resp2","eth_balance","bbks_balance","getETH","HomePage","_wallet$prices$bnb","_wallet$prices$bnb2","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_useState3","_useState4","_useState5","_useState6","chainTab","setChainTab","Container","maxWidth","paddingBottom","Tabs","onChange","ev","val","Tab","_wallet$prices$bnb3","tokens_eth","_wallet$prices$eth4","getPairPrices","bnb_busd","unipair_abi","srg_bnb","srg_abi","callsBNB","getReserves","calculatePrice","bnb_busd_reserves","srg_bnb_price","bnb_price","reserve0","reserve1","inBNB","srg_price","inSRG","eth_usdc","srg_eth","bbk_eth","bbk_abi","_ref5","_ref6","eth_usdc_reserves","srg_eth_price","bbk_srg_price","eth_price","inETH","_ref7","_ref8","console","log","KrakenTracker","_wallet$address","useDispatch","useEffect","getDexScreener","tokenList","token_info","dexscreenerChain","axios","get","interval","setInterval","clearInterval","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","providerOptions","_context","prev","next","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","abrupt","Web3Modal","disableInjectedProvider","cacheProvider","stop","apply","arguments","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","provider","_context5","sent","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","window","ethereum","changeWeb3Modal","accounts","subscribeProvider","getAccounts","t0","parseInt","net","getId","t1","_x","on","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","MenuIcon","RouterLink","to","textDecoration","logo","flexGrow","getChainLogo","substr","connectWallet","Routes","Route","path","exact","element","Drawer","PaperProps","minWidth","backgroundColor","alignSelf","CloseIcon","button","component","ListSubheader","Link","href","target","marginRight","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"wo2CAkBeA,EAfDC,YAAY,CACtBC,WAAY,CACRC,WAAW,2BAEfC,QAAS,CACLC,KAAM,OACNC,WAAY,CACRC,QAAS,QAEbC,QAAS,CACLC,KAAM,cCbH,MAA0B,iC,0HCA1B,MAA0B,oC,OCG1B,SAASC,EAAeC,GAEnC,OAAOC,cAACC,IAAM,CACVC,KAAMH,EAAMG,KACZC,SAEAC,eAACC,IAAa,CAAAF,SAAA,CACVC,eAAA,OAAKE,MAAO,CAACC,OAAQ,SAAUC,UAAW,UAAUL,SAAA,CAChDH,cAAA,OACIS,IAAKC,EACLC,IAAI,aACJC,MAAO,IACPN,MAAO,CAACO,SAAU,QAASN,OAAQ,GAAIO,aAAc,SAEzDd,cAACe,IAAgB,CAACC,KAAM,IAAKC,UAAW,OAE5CjB,cAACkB,IAAU,CAACV,UAAU,SAASF,MAAO,CAACa,UAAW,IAAIhB,SAAEJ,EAAMqB,YAG1E,C,aCtBO,SAASC,EAAiBC,GAE7B,GAAGC,MAAMD,GAAQ,MAAO,MAExB,GAAGA,EAAS,EAACE,KAAAC,IAAE,GAAI,IACf,MAAO,KAIX,IAAIC,EAAYC,WAAWL,GAAQM,QAAQ,IAAIC,MAAM,UAAU,GAAGC,OAAS,EAGvEJ,EAAY,KAAIA,EAAY,IAE5BJ,EAAS,IAAGI,EAAY,GAG5B,IAAIK,EAAY,EAqBhB,OAnBGT,EAAS,IAAGS,EAAY,GAGxBL,EAAYK,IAAWL,EAAYK,GAEnCT,EAAS,EAACE,KAAAC,IAAE,GAAI,MACfM,EAAY,EACZL,EAAY,GAGQ,IAAIM,KAAKC,aAAa,QAAS,CACnDC,sBAAuBH,EACvBI,sBAAuBT,EACvBU,SAAU,MACVC,aAAc,WACdC,gBAAiB,SACjBhC,MAAO,aAGYiC,OAAOjB,EAClC,CAEO,SAASkB,EAAoBlB,GAEhC,GAAGC,MAAMD,GAAQ,MAAO,KAExB,GAAGA,EAAS,EAACE,KAAAC,IAAE,GAAI,IACf,OAAO,EAGX,IAAIgB,EAAc,EAuBlB,OArBInB,EAAS,MAAMmB,EAAc,GAE7BnB,EAAS,IAAGmB,EAAc,GAC1BnB,EAAS,KAAImB,EAAc,GAC3BnB,EAAS,MAAKmB,EAAc,GAC5BnB,EAAS,OAAMmB,EAAc,GAC7BnB,EAAS,OAAOmB,EAAc,GAC9BnB,EAAS,OAAQmB,EAAc,GAC/BnB,EAAS,OAASmB,EAAc,IAChCnB,EAAS,OAAUmB,EAAc,IACjCnB,EAAS,OAAWmB,EAAc,IAClCnB,EAAS,OAAYmB,EAAc,IACnCnB,EAAS,QAAamB,EAAc,IACpCnB,EAAS,QAAcmB,EAAc,IACrCnB,EAAS,QAAemB,EAAc,IAElB,IAAIT,KAAKC,aAAa,QAAS,CACnDC,sBAAuB,EACvBC,sBAAuBM,IAGJF,OAAOjB,EAClC,C,uDCvEaoB,EAAiBC,YAAU,CACpCC,YAAa,iBACbC,UAAWC,YAAe,CAAEC,QAAS,4CACrCC,UAAW,SAAAC,GAAO,MAAK,CACnBC,QAASD,EAAQE,MAAM,CACnBA,MAAO,SAAAC,GAAA,IAAEC,EAAQD,EAARC,SAAUC,EAAYF,EAAZE,aAAY,eAAAC,OAAeF,EAAQ,KAAAE,OAAID,EAAY,IAE1EE,SAAUP,EAAQE,MAAM,CACpBA,MAAO,SAACM,GAAa,gBAAAF,OAAeE,EAAa,IAExD,IAG2BC,IAAqBhB,EAAtCiB,gBAAsCjB,EAArBgB,kB,uDCU1BE,GAAYC,aAAW,SAACzE,GAAK,MAAM,CACrC0E,YAAa,CACThD,aAAc,MACdiD,WAAY,GACZlD,SAAU,WACVmD,IAAK,GACLC,OAAQ,GACRrD,MAAO,GACPsD,QAAS,eACTC,eAAgB,QAChB,SAAU,CACNC,gBAAgB,0DAEpB,SAAU,CACNA,gBAAgB,0DAEpB,QAAS,CACLA,gBAAgB,yDAEpB,QAAS,CACLA,gBAAgB,0DAGxBC,SAAU,CACNC,MAAO,OAEXC,SAAU,CACND,MAAO,SAEd,IAEc,SAASE,GAAgBzE,GAEpC,IAAO0E,EAAgD1E,EAAhD0E,iBAAkBC,EAA8B3E,EAA9B2E,QAASxE,EAAqBH,EAArBG,KAAMyE,EAAe5E,EAAf4E,MAAOC,EAAQ7E,EAAR6E,KAE/CC,EAAuBnB,GAAiBkB,GAAQH,EAAkB,CAC9DK,MAAO5E,IADJ6E,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAqBb,OAAOhF,cAACC,IAAM,CAACC,KAAMA,EAAM+E,YAAU,EAAA9E,SACjCC,eAACC,IAAa,CAAAF,SAAA,CACVH,cAACkF,IAAM,CAACC,QAASR,EAAOrE,MAAO,CAACO,SAAU,WAAYmD,IAAK,GAAIoB,MAAO,GAAIC,OAAQ,OAAOlF,SAAC,UAC1FC,eAACkF,IAAI,CAACC,WAAS,EAACC,QAAS,EAAErF,SAAA,CAER,cAAX6E,GACGD,EAAKU,OACiB,IAAtBV,EAAKU,MAAM3D,QACX1B,eAAAsF,WAAA,CAAAvF,SAAA,CACCH,cAAC2F,GAAW,CACRlB,iBAAkBA,EAClBM,KA5BxB,SAAkBU,GAAO,IAADG,EAEdtC,GAA2D,QAA5CsC,EAAAC,GAAWC,OAAOpB,GAASD,UAAiB,IAAAmB,OAAA,EAA5CA,EAA8CG,uBAAmBC,EAEtF,GAAG1C,EAAa,CACZ,IAAI2C,EAAIR,EAAM,GAMd,OALAA,EAAMS,KAAI,SAAAC,GACH7C,EAAa8C,gBAAkBD,EAAKE,YAAYD,gBAC/CH,EAAIE,EAEZ,IACOF,CACX,CAEA,OAAOR,EAAM,EACjB,CAa8Ba,CAASvB,EAAKU,OACpBf,QAASA,IAEb1E,cAACuG,GAAO,CAACxB,KAAMA,EAAKU,WAIb,cAAXT,GACGD,EAAKU,QACJV,EAAKU,MAAM3D,QACZ9B,cAACsF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SAACH,cAACkB,IAAU,CAAAf,SAAC,4BAKtD,CAEA,SAASwF,GAAY5F,GAEjB,IAAM2G,EAAU9C,KAEhB+C,EAAwCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE7B9B,EAAmChF,EAAnCgF,KAAML,EAA6B3E,EAA7B2E,QAASD,EAAoB1E,EAApB0E,iBAEhBwC,EAAgB,SAACC,GACnB,OAAc,IAAVA,EAAoB,GAEjBA,EAAQ,EAAIR,EAAQnC,SAAWmC,EAAQrC,QAClD,EAEA8C,EAAqBpC,EAAKqC,UAArBC,EAAIF,EAAJE,KAAMC,EAAMH,EAANG,OAOX,MALyB,WAArB7C,IACA4C,EAAOA,EAAKE,QAAQ,WAAY,IAChCD,EAASA,EAAOC,QAAQ,IAAK,KAG1BnH,eAACkF,IAAI,CAACC,WAAS,EAAApF,SAAA,CAClBH,cAACsF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SACdC,eAACoH,IAAQ,CAAArH,SAAA,CACLC,eAACqH,IAAc,CAAAtH,SAAA,CACXH,cAAC0H,IAAM,CACHjH,IAAG,qCAAA8C,OAAuCmB,EAAO,KAAAnB,OAAyB,WAArBkB,EAAgC,GAAKA,EAAmB,IAAG,eACnHM,EAAK4C,SAAW3H,cAAA,QAAM4H,UAAWC,YAAKnB,EAAQ5C,YAAaiB,EAAK4C,cAErE3H,cAAC8H,IAAY,CACTlI,QAASyH,EACTU,UAAWT,SAKE,WAArB7C,GAAiCzE,cAACsF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SAC/CH,cAACwH,IAAQ,CACLQ,gBACIhI,cAACiI,IAAU,CAACC,KAAK,MAAM,aAAW,WAAW/C,QAAS,kBCpJ1CgD,EDoJkE1D,ECpJ5D2D,EDoJ8E,kBAAIpB,GAAgB,EAAK,OCnJ7IqB,UAAUC,UAAUC,UAAUJ,GAAMK,MAAK,WAClCJ,GAASA,GAChB,IAAG,SAAUK,GACT,IAJD,IAA6BN,EAAMC,CDoJwG,EAACjI,SACvHH,cAAC0I,KAAe,MAEvBvI,SACDH,cAAC8H,IAAY,CACTlI,QAAS6E,EACTsD,UAAU,mBACVY,uBAAwB,CAACC,SAAU,gBAKnDxI,eAACkF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SAAA,CACdH,cAACwH,IAAQ,CAAArH,SACLH,cAAC8H,IAAY,CACTlI,QAASyB,EAAiB0D,EAAK8D,KAC/Bd,UAAU,0BAGlB3H,eAACoH,IAAQ,CAAArH,SAAA,CACLH,cAAC8H,IAAY,CACTlI,QAASyB,EAAiB0D,EAAK+D,UAC/Bf,UAAU,iBAEd/H,cAAC8H,IAAY,CACTlI,QAAS4C,EAAoBuC,EAAKgE,aAClChB,UAAS,YAAAxE,OAAcwB,EAAKiE,WAAW1B,aAG/ClH,eAACoH,IAAQ,CAAArH,SAAA,CACLH,cAAC8H,IAAY,CACTlI,QAAS,IAAMqJ,KAAQlE,EAAKmE,UAAUC,KACtCpB,UAAU,cAEd/H,cAAC8H,IAAY,CACTlI,QAASqJ,KAAQlE,EAAKmE,UAAUE,MAChCrB,UAAWhD,EAAKqC,UAAUE,SAE9BtH,cAAC8H,IAAY,CACTlI,QAASqJ,KAAQlE,EAAKmE,UAAUG,OAChCtB,UAAWhD,EAAKiE,WAAW1B,YAInCtH,cAACkB,IAAU,CAACZ,MAAO,CAACgJ,YAAa,GAAInI,UAAW,GAAIoI,WAAY,KAAKpJ,SAAC,iBACtEC,eAACoH,IAAQ,CAAArH,SAAA,CACLH,cAAC8H,IAAY,CACTlI,QAASmF,EAAKyE,YAAYC,GAAK,IAC/B1B,UAAU,SACVH,UAAWX,EAAclC,EAAKyE,YAAYC,MAE9CzJ,cAAC8H,IAAY,CACTlI,QAASmF,EAAKyE,YAAYE,GAAK,IAC/B3B,UAAU,OACVH,UAAWX,EAAclC,EAAKyE,YAAYE,MAE9C1J,cAAC8H,IAAY,CACTlI,QAASmF,EAAKyE,YAAYG,GAAK,IAC/B5B,UAAU,QACVH,UAAWX,EAAclC,EAAKyE,YAAYG,MAE9C3J,cAAC8H,IAAY,CACTlI,QAASmF,EAAKyE,YAAYI,IAAM,IAChC7B,UAAU,SACVH,UAAWX,EAAclC,EAAKyE,YAAYI,UAIlD5J,cAACkB,IAAU,CAACZ,MAAO,CAACgJ,YAAa,GAAInI,UAAW,GAAIoI,WAAY,KAAKpJ,SAAC,WACtEC,eAACoH,IAAQ,CAAArH,SAAA,CACLH,cAAC8H,IAAY,CACTlI,QAAS,IAAMqJ,KAAQlE,EAAK8E,OAAOJ,IACnC1B,UAAU,WAEd/H,cAAC8H,IAAY,CACTlI,QAAS,IAAMqJ,KAAQlE,EAAK8E,OAAOH,IACnC3B,UAAU,SAEd/H,cAAC8H,IAAY,CACTlI,QAAS,IAAMqJ,KAAQlE,EAAK8E,OAAOF,IACnC5B,UAAU,UAEd/H,cAAC8H,IAAY,CACTlI,QAAS,IAAMqJ,KAAQlE,EAAK8E,OAAOD,KACnC7B,UAAU,cAIlB/H,cAACkB,IAAU,CAACZ,MAAO,CAACgJ,YAAa,GAAInI,UAAW,GAAIoI,WAAY,KAAKpJ,SAAC,8BACtEC,eAACoH,IAAQ,CAAArH,SAAA,CACLH,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKwB,EAAK+E,KAAKL,GAAGM,KAAI,KAAAxG,OAAIwB,EAAK+E,KAAKL,GAAGO,OAC9CjC,UAAU,WAEd/H,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKwB,EAAK+E,KAAKJ,GAAGK,KAAI,KAAAxG,OAAIwB,EAAK+E,KAAKJ,GAAGM,OAC9CjC,UAAU,SAEd/H,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKwB,EAAK+E,KAAKH,GAAGI,KAAI,KAAAxG,OAAIwB,EAAK+E,KAAKH,GAAGK,OAC9CjC,UAAU,UAEd/H,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKwB,EAAK+E,KAAKF,IAAIG,KAAI,KAAAxG,OAAIwB,EAAK+E,KAAKF,IAAII,OAChDjC,UAAU,iBAItB/H,cAACiK,IAAQ,CACL/J,KAAM6G,EACNmD,QAAS,kBAAIlD,GAAgB,EAAM,EACnCmD,iBAAkB,IAAKhK,SAEvBH,cAACoK,IAAK,CAACC,SAAS,UAAUC,GAAI,CAAE1J,MAAO,QAAU2J,QAAQ,SAAQpK,SAAC,6CAG9E,CAEA,SAASoG,GAAQxG,GAEb,IAAOgF,EAAQhF,EAARgF,KAQDyF,EAAc,SAACC,GACjB,OAAQA,GACJ,IAAK,iBACD,MAAO,kBACX,IAAK,aACD,MAAO,cACX,IAAK,YACD,MAAO,aACX,IAAK,YACD,MAAO,aACX,IAAK,WACD,MAAO,WACX,IAAK,YACD,MAAO,YACX,IAAK,WACD,MAAO,YACX,IAAK,cACD,MAAO,eACX,IAAK,UACD,MAAO,UACX,QACI,MAAO,cAEnB,EAEA,OAAOrK,eAACkF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SAAA,CACrBH,cAACkB,IAAU,CAACZ,MAAO,CAACgJ,YAAa,GAAInI,UAAW,GAAIoI,WAAY,KAAKpJ,SAAC,YACtEH,cAAC0K,IAAI,CAAAvK,SAGG4E,EAAKmB,KAAI,SAAAC,GAAS,IAADwE,EApCNzD,EAqCP,OAAO9G,eAACoH,IAAQ,CAAArH,SAAA,CACZH,cAAC8H,IAAY,CACTlI,QAASQ,eAAAsF,WAAA,CAAAvF,SAAA,CAAEC,eAAA,QACPE,MAAO,CAACiJ,WAAY,KAAKpJ,SAAA,CAAEgG,EAAKiB,UAAUE,OAAO,OAASnB,EAAK6C,WAAW1B,UAC9EqB,uBAAwB,CAACY,WAAY,KACrCxB,UAAS,GAAAxE,OAAKiH,EAAYrE,EAAKyE,OAAM,QAAArH,OAAO0F,MAAsB,QAAd0B,EAAAxE,EAAK+C,iBAAS,IAAAyB,OAAA,EAAdA,EAAgBxB,MAAO,MAE/EnJ,cAAC8H,IAAY,CACTlI,QAASyB,EAAiB8E,EAAK2C,UAC/Bf,UAAW5B,EAAKqD,YAAYI,IAAM,IAClCjB,uBAAwB,CAACnI,UAAW,SACpCqK,yBAA0B,CAACrK,UAAW,QAAS8D,OAhDhD4C,EAgDqEf,EAAKqD,YAAYI,IA/C3F,IAAV1C,EAAoB,GAEjBA,EAAQ,EAAI,QAAU,YAkCKf,EAAKE,YAc/B,QAKhB,CE5TA,IAAMzC,GAAYC,aAAW,SAACzE,GAAK,MAAM,CACrC0E,YAAa,CACThD,aAAc,MACdiD,WAAY,GACZlD,SAAU,WACVmD,IAAK,GACLC,OAAQ,GACRrD,MAAO,GACPsD,QAAS,eACTC,eAAgB,QAChB,SAAU,CACNC,gBAAgB,0DAEpB,SAAU,CACNA,gBAAgB,0DAEpB,QAAS,CACLA,gBAAgB,yDAEpB,QAAS,CACLA,gBAAgB,0DAG3B,IAEc,SAAS0G,GAAc/K,GAAQ,IAADgL,EAAAC,EAEnCtE,EAAU9C,KAETqH,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAA5CH,OAEAxG,EAA0H1E,EAA1H0E,iBAAkB4C,EAAwGtH,EAAxGsH,KAAM3C,EAAkG3E,EAAlG2E,QAAS2G,EAAyFtL,EAAzFsL,MAAOC,EAAkFvL,EAAlFuL,QAASC,EAAyExL,EAAzEwL,aAAcC,EAA2DzL,EAA3DyL,OAAQ5G,EAAmD7E,EAAnD6E,KAAM6G,EAA6C1L,EAA7C0L,WAAYC,EAAiC3L,EAAjC2L,aAAc1D,EAAmBjI,EAAnBiI,gBAE9GrB,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCzG,EAAI2G,EAAA,GAAE8E,EAAO9E,EAAA,GAEpB,QAAiCb,IAA7BiF,EAAOW,SAASlH,GAChB,OAAO1E,cAAA0F,WAAA,IAaX,OAAOtF,eAACyL,IAAK,CAACvL,MAAO,CAACa,UAAW,GAAI2K,aAAc,GAAG3L,SAAA,CAClDC,eAACoH,IAAQ,CAACQ,gBAAiBA,EAAgB7H,SAAA,CACvCC,eAACqH,IAAc,CAACtC,QAAS,kBAAMwG,GAAQ,EAAK,EAACxL,SAAA,CACzCH,cAAC0H,IAAM,CACHjH,IAAG,qCAAA8C,OAAuCmB,EAAO,KAAAnB,OAAyB,WAArBkB,EAAgC,GAAKA,EAAmB,IAAG,cACnHC,IAAY8G,GAAUxL,cAAA,QAAM4H,UAAWC,YAAKnB,EAAQ5C,YAAaY,QAEtE1E,cAAC8H,IAAY,CACTlI,QAASyH,EACTU,UAAW1G,EAAsB,OAALgK,QAAK,IAALA,OAAK,EAALA,EAAOU,OACnCpD,uBAAwB,CAACY,WAAY,OAEzCvJ,cAAC8H,IAAY,CACTlI,QAAS4C,EAAoByI,EAAOW,SAASlH,GAASD,IACtDsD,UAAW1G,GAAsB,OAALgK,QAAK,IAALA,OAAK,EAALA,EAAOU,OAAQd,EAAOW,SAASlH,GAASD,IACpEkE,uBAAwB,CAACnI,UAAW,QAAS+I,WAAY,KACzDsB,yBAA0B,CAACrK,UAAW,cAK1CyK,EAAOe,OAAOtH,GAASD,GAAoB,GAAKzE,cAAA0F,WAAA,CAAAvF,SAC5CC,eAACoH,IAAQ,CAACQ,gBAAiBuD,EAAcjL,MAAO,CAACgE,MAAO,UAAW2H,WAAY,GAAG9L,SAAA,CAC9EH,cAAC8H,IAAY,CACTlI,QAAQ,SACRmI,UAAU,QACVY,uBAAwB,CAACY,WAAY,OAEzCvJ,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKf,EAA0C,QAAvBuI,EAACE,EAAOe,OAAOtH,UAAQ,IAAAqG,OAAA,EAAtBA,EAAyBtG,IAAkB,KAAAlB,OAAI8D,GAC/EU,UAAW1G,GAAuC,QAAtB2J,EAAAC,EAAOe,OAAOtH,UAAQ,IAAAsG,OAAA,EAAtBA,EAAyBvG,KAAyB,OAAL4G,QAAK,IAALA,OAAK,EAALA,EAAOU,QAChFpD,uBAAwB,CAACnI,UAAW,QAAS+I,WAAY,KACzDsB,yBAA0B,CAACrK,UAAW,iBAQ9CyK,EAAOW,SAASM,KAAK,+CAAiD,KACtEjB,EAAOW,SAASM,KAAK,+CAAiD,MAE1EZ,GAAWtL,cAAA0F,WAAA,CAAAvF,SACPC,eAACoH,IAAQ,CAACQ,gBAAiBuD,EAAcjL,MAAO,CAACgE,MAAO,UAAW2H,WAAY,GAAG9L,SAAA,CAC9EH,cAAC8H,IAAY,CACTlI,QAAQ,mBACRmI,UAAU,UACVY,uBAAwB,CAACY,WAAY,OAEzCvJ,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKf,EAAoB8I,EAAQa,SAAQ,KAAA5I,OAAI+H,EAAQhE,QAC5DS,UAAS,GAAAxE,OAAKf,EAAoB8I,EAAQc,SAAQ,KAAA7I,OAAI+H,EAAQhE,QAC9DqB,uBAAwB,CAACnI,UAAW,QAAS+I,WAAY,KACzDsB,yBAA0B,CAACrK,UAAW,gBAOlDiL,GAAczL,cAAA0F,WAAA,CAAAvF,SACVC,eAACoH,IAAQ,CAAClH,MAAO,CAACgE,MAAO,UAAW2H,WAAY,GAAG9L,SAAA,CAC/CH,cAAC8H,IAAY,CACTlI,QAAQ,mBACR+I,uBAAwB,CAACY,WAAY,OAEzCvJ,cAAC8H,IAAY,CACTlI,QAAO,GAAA2D,OAAKf,EA9EX,WACjB,IAAO6J,EAAmEZ,EAAnEY,QAASC,EAA0Db,EAA1Da,SAAUC,EAAgDd,EAAhDc,YAAaC,EAAmCf,EAAnCe,aAAcC,EAAqBhB,EAArBgB,YAAaC,EAAQjB,EAARiB,KAE5DC,EAAM,IAAIC,YAAU,GAAGC,KAAKR,GAE5BS,EAAM,IAAIF,YAAU,GAAGC,KAAKP,GAAUO,KAAKN,GAAaQ,MAAMN,GAAaM,MAAMP,GAAcO,MAAML,GAE3G,OAAOC,EAAII,MAAMD,GAAKE,UAASxL,KAAAC,IAAC,GAAI,IACxC,CAsEoDwL,IAAe,KAAA1J,OAAImI,GACnD/C,uBAAwB,CAACnI,UAAW,QAAS+I,WAAY,YAQzEvJ,cAACwE,GAAe,CACZC,iBAAkBA,EAClBG,KAAMA,EACNF,QAASA,EACTxE,KAAMA,EACNyE,MAAO,kBAAMgH,GAAQ,EAAM,MAEvC,C,qBC7IMuB,GAAe,CACjBjC,OAAQ,CACJkC,aAASnH,EACToH,WAAOpH,EACPqH,UAAMrH,EAENsH,KAAM,CACFC,KAAM,CAAC,EACPrB,KAAM,CAAC,EACPsB,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVC,GAAI,CACAH,KAAM,CAAC,EACPrB,KAAM,CAAC,EACPsB,IAAK,CAAC,EACNC,IAAK,CAAC,GAGV7B,SAAU,CACN2B,KAAM,CAAC,EACPrB,KAAM,CAAC,EACPsB,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVzB,OAAQ,CACJuB,KAAM,CAAC,EACPrB,KAAM,CAAC,EACPsB,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVE,OAAQ,CACJJ,KAAM,CAAC,EACPrB,KAAM,CAAC,EACPsB,IAAK,CAAC,EACNC,IAAK,CAAC,GAGVG,OAAQ,CACJL,KAAM,EACNrB,KAAM,EACNsB,IAAK,EACLC,IAAK,IAGbhI,MAAO,CACHoI,aAAc,6CACdC,aAAc,6CACdC,aAAc,6CACdC,aAAc,6CACdC,YAAa,6CACbC,YAAa,6CAEbC,YAAa,6CACbC,YAAa,6CACbC,YAAa,6CAEbC,aAAc,6CACdC,aAAc,6CAEdC,YAAa,6CAEbC,YAAa,6CACbC,WAAY,6CAEZC,WAAY,6CACZC,WAAY,8CAEhBC,IAAK,CACD3C,KAAM,uBACNqB,KAAM,wCACNC,IAAK,qCACLC,IAAK,+BAET3H,OAAS,CAAC,GAGRgJ,GAAeC,aAAY,CAC7B1H,KAAM,UACN6F,gBACA8B,SAAU,CAENC,kBAAiB,SAAC9D,EAAO+D,GACrB/D,EAAMF,OAAOmC,MAAQ8B,EAAOC,OAChC,EAEAC,oBAAmB,SAACjE,EAAO+D,GACvB/D,EAAMF,OAAOkC,QAAU+B,EAAOC,OAClC,EAEAE,yBAAwB,SAAClE,EAAO+D,GAC5B/D,EAAMF,OAAOoC,KAAO6B,EAAOC,OAC/B,EAEAG,WAAU,SAACnE,EAAO+D,GACV/D,EAAMF,OAAOqC,KAAK4B,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,oBACvD0G,EAAMF,OAAOqC,KAAK4B,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoB,CAAC,GAEhF0G,EAAMF,OAAOqC,KAAK4B,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoByK,EAAOC,QAAQ7B,IAC9F,EAEAiC,aAAY,SAACpE,EAAO+D,GACZ/D,EAAMF,OAAOyC,GAAGwB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,oBACrD0G,EAAMF,OAAOyC,GAAGwB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoB,CAAC,GAE9E0G,EAAMF,OAAOyC,GAAGwB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoByK,EAAOC,QAAQzB,EAC5F,EAEA8B,eAAc,SAACrE,EAAO+D,GACd/D,EAAMF,OAAOW,SAASsD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,oBAC3D0G,EAAMF,OAAOW,SAASsD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoB,GAEnF0G,EAAMF,OAAOW,SAASsD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoByK,EAAOC,QAAQ9C,OAClG,EAEAoD,aAAY,SAACtE,EAAO+D,GACZ/D,EAAMF,OAAOe,OAAOkD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,oBACzD0G,EAAMF,OAAOe,OAAOkD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoB,GAEjF0G,EAAMF,OAAOe,OAAOkD,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoByK,EAAOC,QAAQnD,MAChG,EAEA0D,aAAY,SAACvE,EAAO+D,GACZ/D,EAAMF,OAAO0C,OAAOuB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,oBACzD0G,EAAMF,OAAO0C,OAAOuB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoB,CAAC,GAElF0G,EAAMF,OAAO0C,OAAOuB,EAAOC,QAAQ/B,OAAO8B,EAAOC,QAAQ1K,kBAAoByK,EAAOC,QAAQ9D,KAChG,EAEAsE,aAAY,SAACxE,EAAO+D,GAChB,IAAIU,EAAQ,EACZC,OAAOC,QAAQ3E,EAAMF,OAAOW,SAASsD,EAAOC,UAAUjJ,KAAI,SAAA9C,GAAiC,IAAD2M,EAAAjJ,YAAA1D,EAAA,GAA9BqB,EAAgBsL,EAAA,GAAC1D,EAAO0D,EAAA,GAIhF,OAHG5E,EAAMF,OAAO0C,OAAOuB,EAAOC,SAAS1K,KACnCmL,GAASvD,EAAQlB,EAAMF,OAAO0C,OAAOuB,EAAOC,SAAS1K,GAAkBsH,OAEpE,CAACtH,EAAiB4H,EAC7B,IACAwD,OAAOC,QAAQ3E,EAAMF,OAAOe,OAAOkD,EAAOC,UAAUjJ,KAAI,SAAA8J,GAAiC,IAADC,EAAAnJ,YAAAkJ,EAAA,GAA9BvL,EAAgBwL,EAAA,GAAC5D,EAAO4D,EAAA,GAI9E,OAHG9E,EAAMF,OAAO0C,OAAOuB,EAAOC,SAAS1K,KACnCmL,GAASvD,EAAQlB,EAAMF,OAAO0C,OAAOuB,EAAOC,SAAS1K,GAAkBsH,OAEpE,CAACtH,EAAiB4H,EAC7B,IAEAlB,EAAMF,OAAO2C,OAAOsB,EAAOC,SAAWS,CAC1C,EAEAM,YAAW,SAAC/E,GACRA,EAAMF,OAAOmC,WAAQpH,EACrBmF,EAAMF,OAAOkC,aAAUnH,EACvBmF,EAAMF,OAAOoC,UAAOrH,CACxB,EAEAmK,aAAY,SAAChF,EAAO+D,GAChB/D,EAAMrF,OAASsK,KAAKC,MAAMD,KAAKE,UAAUpB,EAAOC,SACpD,KAKDoB,GAeHzB,GAAa0B,QAdbvB,GAAiBsB,GAAjBtB,kBACAG,GAAmBmB,GAAnBnB,oBACAC,GAAwBkB,GAAxBlB,yBAIAG,IAFUe,GAAVjB,WACYiB,GAAZhB,aACcgB,GAAdf,gBAEAE,IADYa,GAAZd,aACYc,GAAZb,cACAC,GAAYY,GAAZZ,aAEAO,GAAWK,GAAXL,YAEAC,GAAYI,GAAZJ,aAGWrB,MAAoB,QClLpB2B,gBAAe,CAC1BC,QAAOC,aAAA,CACHvF,QAASwF,IACRlO,EAAeE,YAAcF,EAAegO,SAEjDG,WAAY,SAAAC,GAAoB,OAAIA,IAAuBvN,OACvDb,EAAemO,WAClB,ICXQE,GAAmB,SAACC,EAAMC,GACnC,IAAIC,EAAQ,IAAIF,EAAKG,aAEjBC,EAAWH,EAAM/K,KAAI,SAAAmL,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GAErB,GAAGH,aAAgBC,QACf,OAAOD,EAAK7I,MAAK,SAAAiJ,GAAI,OAAEF,EAAIE,EAAK,IAAEC,OAAM,SAAAjJ,GAAG,OAAE+I,EAAI/I,EAAI,IAGzD,IAAIkJ,EAAMN,EAAKO,QAAQ,CAAC,GAAG,SAACnJ,EAAK1D,GAC1B0D,EAAK+I,EAAI/I,GACP8I,EAAIxM,EACb,IACAmM,EAAMW,IAAIF,EACd,GACJ,IAGA,OAFAT,EAAMY,UAECR,QAAQS,IAAIX,EACvB,E,6BCXe,SAASY,GAAgBC,GACpC,IACAC,EADeC,GAAMC,WACOhH,QAAdyD,GAAFqD,EAALzM,MAAUyM,EAAHrD,UAES7I,IAAnBiM,IAQR,SAAgBxM,EAAOoJ,EAAKoD,GACxB,IAAMI,EAAU,IAAIC,IAAKzD,GAEnB0D,EAAe,IAAIF,EAAQ5E,IAAI+E,SAASC,GAAY,8CAGpDC,EAAW,CACbL,EAAQ5E,IAAIkF,WAAWV,GACvBM,EAAaK,QAAQC,UAAUZ,GAAgBZ,MAGnDxB,OAAOC,QAAQgD,GAAWhN,QAAQI,KAAK,SAAA9C,GAAgB,IAAD2M,EAAAjJ,YAAA1D,EAAA,GAAX2P,GAADhD,EAAA,GAAMA,EAAA,IACtCiD,EAAY,IAAIX,EAAQ5E,IAAI+E,SAASC,GAAYM,EAAMtO,kBAC7DiO,EAASO,KAAKD,EAASJ,QAAQC,UAAUZ,GAAgBZ,KAC7D,IAGAN,GAAiBsB,EAASK,GAAUlK,MAAK,SAAAiJ,GACrC,IAAAyB,EAAApM,YAGI2K,EAAI,GAFJ0B,EAAWD,EAAA,GACXE,EAAWF,EAAA,GAGff,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkB,SAClB4H,QAAS8G,EAAW3R,KAAAC,IAAI,GAAM,OAGlC0Q,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkB,6CAClB4H,QAAS+G,EAAW5R,KAAAC,IAAI,GAAM,MAGlCoO,OAAOC,QAAQgD,GAAWhN,QAAQI,KAAK,SAAA8J,EAAWsD,GAAO,IAADrD,EAAAnJ,YAAAkJ,EAAA,GAAb+C,GAAD9C,EAAA,GAAMA,EAAA,IAC5CkC,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkBsO,EAAMtO,iBACxB4H,QAASoF,EAAK6B,EAAE,GAAE9R,KAAAC,IAAI,GAAMsR,EAAMQ,YAE1C,IAEApB,GAAMkB,SAAS1D,GAAa,OAEhC,GACJ,CAlDI6D,CAAO/N,EAAOoJ,EAAIrB,IAAKyE,GAoD3B,SAAgBxM,EAAOoJ,EAAKoD,GACxB,IAAMwB,EAAU,IAAInB,IAAKzD,GACnB6E,EAAgB,IAAID,EAAQhG,IAAI+E,SAASmB,GAAa,8CACtDpB,EAAe,IAAIkB,EAAQhG,IAAI+E,SAASmB,GAAa,8CAErDC,EAAW,CACbH,EAAQhG,IAAIkF,WAAWV,GACvByB,EAAcd,QAAQC,UAAUZ,GAAgBZ,KAChDkB,EAAaK,QAAQC,UAAUZ,GAAgBZ,MAGnDN,GAAiB0C,EAASG,GAAUpL,MAAK,SAAAiJ,GACrC,IAAAoC,EAAA/M,YAII2K,EAAI,GAHJqC,EAAWD,EAAA,GACXE,EAAYF,EAAA,GACZT,EAAWS,EAAA,GAGf1B,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkB,SAClB4H,QAASyH,EAAWtS,KAAAC,IAAI,GAAM,OAGlC0Q,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkB,6CAClB4H,QAAS0H,EAAYvS,KAAAC,IAAI,GAAM,MAGnC0Q,GAAMkB,SAAS7D,GAAe,CAC1BpC,MAAO,MACP3I,iBAAkB,6CAClB4H,QAAS+G,EAAW5R,KAAAC,IAAI,GAAM,MAGlC0Q,GAAMkB,SAAS1D,GAAa,OAEhC,GACJ,CA1FIqE,CAAOvO,EAAOoJ,EAAIpB,IAAKwE,GAC3B,C,cCWe,SAASgC,KAAY,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAExBrJ,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAA5CH,OAEPtE,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCyF,EAAOvF,EAAA,GACd0N,GAD0B1N,EAAA,GACQD,oBAAS,IAAM4N,EAAA1N,YAAAyN,EAAA,GACjDE,GADgBD,EAAA,GAAcA,EAAA,GACE5N,mBAAS,QAAM8N,EAAA5N,YAAA2N,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAE5B,OAAQtU,eAACyU,IAAS,CAACC,SAAS,KAAI3U,SAAA,CACxBH,cAACsF,IAAI,CAACC,WAAS,EAACC,QAAS,EAAGlF,MAAO,CAACa,WAAY,EAAG4T,cAAe,IAAI5U,SAUlEC,eAACkF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SAAA,CAEdH,cAAC6L,IAAK,CAACvL,MAAO,CAACa,UAAW,IAAIhB,SAC1BH,cAACwH,IAAQ,CAAArH,SACLH,cAAC8H,IAAY,CACTlI,QAASyB,EACL4J,EAAO2C,OAAOJ,IACdvC,EAAO2C,OAAOH,KAElB1F,UAAU,qBACVY,uBAAwB,CAACY,WAAY,IAAKX,SAAU,SAAUpI,UAAW,SACzEqK,yBAA0B,CAACrK,UAAW,eAKlDJ,eAAC4U,IAAI,CACDzK,QAAQ,YACRrD,MAAOyN,EACPM,SAAU,SAACC,EAAIC,GACXP,EAAYO,EAChB,EAAEhV,SAAA,CAEFH,cAACoV,IAAG,CAAC3K,GAAG,MAAMvD,MAAM,MAAM9F,MAAM,QAChCpB,cAACoV,IAAG,CAAC3K,GAAG,MAAMvD,MAAM,MAAM9F,MAAM,WAInB,QAAbuT,GAAsBvU,eAAAsF,WAAA,CAAAvF,SAAA,CAClBH,cAAC6L,IAAK,CAACvL,MAAO,CAACa,UAAW,IAAIhB,SAC1BH,cAACwH,IAAQ,CAAArH,SACLH,cAAC8H,IAAY,CACTlI,QAASyB,EAAiB4J,EAAO2C,OAAOJ,KACxCzF,UAAU,kBACVY,uBAAwB,CAACY,WAAY,IAAKX,SAAU,SAAUpI,UAAW,SACzEqK,yBAA0B,CAACrK,UAAW,eAMlDR,cAAC8K,GAAa,CACVrG,iBAAiB,SACjBC,QAAQ,MACR2C,KAAK,MACLmE,QAAM,EACNH,MAAwB,QAAnB6I,EAAEjJ,EAAO0C,OAAOH,WAAG,IAAA0G,OAAA,EAAjBA,EAAmB1I,OAC1B5G,KAAK,+CAIT5E,cAAC8K,GAAa,CACVrG,iBAAiB,6CACjB4C,KAAK,MACL3C,QAAQ,MACR2G,MAAwB,QAAnB8I,EAAElJ,EAAO0C,OAAOH,WAAG,IAAA2G,OAAA,EAAjBA,EAAoB,gDAI3BtE,OAAOC,QAAQgD,GAAWhN,QAAQI,KAAK,SAAA9C,GAAgB,IAADiS,EAAAtF,EAAAjJ,YAAA1D,EAAA,GAAX2P,GAADhD,EAAA,GAAMA,EAAA,IAC3C,OAAO/P,cAAC8K,GAAa,CAElBrG,iBAAkBsO,EAAMtO,iBACxB4C,KAAM0L,EAAMzL,OACZ5C,QAAQ,MACR2G,MAAwB,QAAnBgK,EAAEpK,EAAO0C,OAAOH,WAAG,IAAA6H,OAAA,EAAjBA,EAAoBtC,EAAMtO,mBAJ3BsO,EAAMtO,iBAMpB,OAQK,QAAbkQ,GAAsBvU,eAAAsF,WAAA,CAAAvF,SAAA,CAClBH,cAAC6L,IAAK,CAACvL,MAAO,CAACa,UAAW,IAAIhB,SAC1BH,cAACwH,IAAQ,CAAArH,SACLH,cAAC8H,IAAY,CACTlI,QAASyB,EAAiB4J,EAAO2C,OAAOH,KACxC1F,UAAU,kBACVY,uBAAwB,CAACY,WAAY,IAAKX,SAAU,SAAUpI,UAAW,SACzEqK,yBAA0B,CAACrK,UAAW,eAMlDR,cAAC8K,GAAa,CACVrG,iBAAiB,SACjBC,QAAQ,MACR2C,KAAK,MACLmE,QAAM,EACNH,MAAwB,QAAnB+I,EAAEnJ,EAAO0C,OAAOF,WAAG,IAAA2G,OAAA,EAAjBA,EAAmB5I,OAC1B5G,KAAK,+CAIT5E,cAAC8K,GAAa,CACVrG,iBAAiB,6CACjB4C,KAAK,MACL3C,QAAQ,MACR2G,MAAwB,QAAnBgJ,EAAEpJ,EAAO0C,OAAOF,WAAG,IAAA4G,OAAA,EAAjBA,EAAoB,gDAI/BrU,cAAC8K,GAAa,CACVrG,iBAAiB,6CACjB4C,KAAK,OACL3C,QAAQ,MACR2G,MAAwB,QAAnBiJ,EAAErJ,EAAO0C,OAAOF,WAAG,IAAA6G,OAAA,EAAjBA,EAAoB,gDAI3BzE,OAAOC,QAAQwF,GAAWxP,QAAQI,KAAK,SAAA8J,GAAgB,IAADuF,EAAAtF,EAAAnJ,YAAAkJ,EAAA,GAAX+C,GAAD9C,EAAA,GAAMA,EAAA,IAC5C,OAAOjQ,cAAC8K,GAAa,CAEjBrG,iBAAkBsO,EAAMtO,iBACxB4C,KAAM0L,EAAMzL,OACZ5C,QAAQ,MACR2G,MAAwB,QAAnBkK,EAAEtK,EAAO0C,OAAOF,WAAG,IAAA8H,OAAA,EAAjBA,EAAoBxC,EAAMtO,mBAJ5BsO,EAAMtO,iBAMnB,YAOpBzE,cAACF,EAAc,CAACI,KAAMkM,EAAShL,MAAM,0BAIjD,C,qEC1Ke,SAASoU,KACpB,IACAtD,EADeC,GAAMC,WACOhH,QAArB3F,EAAKyM,EAALzM,MAAOoJ,EAAGqD,EAAHrD,KAMlB,SAAgBpJ,EAAOoJ,GAGnB,IAAMwD,EAAU,IAAIC,IAAKzD,GACnB4G,EAAW,IAAIpD,EAAQ5E,IAAI+E,SAASkD,GAAajQ,EAAM+I,aACvDmH,EAAU,IAAItD,EAAQ5E,IAAI+E,SAASoD,GAAS,8CAE5CC,EAAW,CACbJ,EAAS7C,QAAQkD,cAAczE,KAC/BsE,EAAQ/C,QAAQmD,iBAAiB1E,MAGrCxB,OAAOC,QAAQgD,GAAWhN,QAAQI,KAAI,SAAA9C,GAAiB,IAAD2M,EAAAjJ,YAAA1D,EAAA,GAAX2P,GAAFhD,EAAA,GAAOA,EAAA,IACtCiD,EAAW,IAAIX,EAAQ5E,IAAI+E,SAASoD,GAAS7C,EAAMtO,kBACzDoR,EAAS5C,KAAKD,EAASJ,QAAQmD,iBAAiB1E,KACpD,IAEAN,GAAiBsB,EAASwD,GAAUrN,MAAK,SAAAiJ,GACrC,IAAAyB,EAAApM,YAGI2K,EAAI,GAFJuE,EAAiB9C,EAAA,GACjB+C,EAAa/C,EAAA,GAGXgD,EAAYF,EAAkBG,SAAWH,EAAkBI,SAGjEjE,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkB,SAClB4G,MAAO,CACHU,MAAOmK,EACPG,MAAO,MAIf,IAAMC,EAAaL,EAAazU,KAAAC,IAAI,GAAM,GAAMyU,EAEhD/D,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkB,6CAClB4G,MAAO,CACHU,MAAOuK,EACPC,MAAO,MAIf1G,OAAOC,QAAQgD,GAAWhN,QAAQI,KAAI,SAAA8J,EAAasD,GAAO,IAADrD,EAAAnJ,YAAAkJ,EAAA,GAAd+C,GAAF9C,EAAA,GAAOA,EAAA,IAC5CkC,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkBsO,EAAMtO,iBACxB4G,MAAO,CACHU,MAAQ0F,EAAK6B,EAAI,GAAE9R,KAAAC,IAAI,GAAM,IAAO6U,KAGhD,IAEAnE,GAAMkB,SAAS1D,GAAa,OAChC,GAEJ,CA/DI6D,CAAO/N,EAAOoJ,EAAIrB,KAiEtB,SAAgB/H,EAAOoJ,GAInB,IAAM4E,EAAU,IAAInB,IAAKzD,GACnB2H,EAAW,IAAI/C,EAAQhG,IAAI+E,SAASkD,GAAajQ,EAAMgJ,aACvDgI,EAAU,IAAIhD,EAAQhG,IAAI+E,SAASoD,GAASnQ,EAAMiJ,YAClDgI,EAAU,IAAIjD,EAAQhG,IAAI+E,SAASmE,GAAS,8CAE5C/C,EAAW,CACb4C,EAAS5D,QAAQkD,cAAczE,KAC/BoF,EAAQ7D,QAAQmD,iBAAiB1E,KACjCqF,EAAQ9D,QAAQmD,iBAAiB1E,MAGrCxB,OAAOC,QAAQwF,GAAWxP,QAAQI,KAAI,SAAA0Q,GAAiB,IAADC,EAAA/P,YAAA8P,EAAA,GAAX7D,GAAF8D,EAAA,GAAOA,EAAA,IACtC7D,EAAW,IAAIS,EAAQhG,IAAI+E,SAASoD,GAAS7C,EAAMtO,kBACzDmP,EAASX,KAAKD,EAASJ,QAAQmD,iBAAiB1E,KACpD,IAGAN,GAAiB0C,EAASG,GACrBpL,MAAK,SAAAiJ,GAEF,IAAAoC,EAAA/M,YAII2K,EAAI,GAHJqF,EAAiBjD,EAAA,GACjBkD,EAAalD,EAAA,GACbmD,EAAanD,EAAA,GAGXoD,EAAYH,EAAkBX,SAAWW,EAAkBV,SAAQ5U,KAAAC,IAAI,GAAM,IAGnF0Q,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkB,SAClB4G,MAAO,CACHU,MAAOkL,EACPC,MAAO,MAIf,IAAMZ,EAAaS,EAAavV,KAAAC,IAAI,GAAM,GAAMwV,EAEhD9E,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkB,6CAClB4G,MAAO,CACHU,MAAOuK,EACPC,MAAO,MAKfpE,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkB,6CAClB4G,MAAO,CACHU,MAAQiL,EAAaxV,KAAAC,IAAI,GAAM,IAAO6U,EACtCC,MAAQS,EAAaxV,KAAAC,IAAI,GAAM,QAIvCoO,OAAOC,QAAQwF,GAAWxP,QAAQI,KAAI,SAAAiR,EAAa7D,GAAO,IAAD8D,EAAAtQ,YAAAqQ,EAAA,GAAdpE,GAAFqE,EAAA,GAAOA,EAAA,IAC5CjF,GAAMkB,SAAS3D,GAAa,CACxBtC,MAAO,MACP3I,iBAAkBsO,EAAMtO,iBACxB4G,MAAO,CACHU,MAAQ0F,EAAK6B,EAAI,GAAE9R,KAAAC,IAAI,GAAM,IAAO6U,KAGhD,IAEAnE,GAAMkB,SAAS1D,GAAa,OAEhC,IACC+B,MAAM2F,QAAQC,IAEvB,CA9IItD,CAAOvO,EAAOoJ,EAAIpB,IACtB,C,mECqBe,SAAS8J,KAAiB,IAADC,EAE9BnE,EAAWoE,cACVxM,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAO,IAA5CH,QCpCI,WAEX,IAAMoI,EAAWoE,cAEjBC,qBAAU,WAEN,IAAMC,EAAiB,WACnB,IAAI1G,EAAQ,GACZpB,OAAOC,QAAQ8H,GAAU9R,QAAQI,KAAI,SAAA9C,GAAqB,IAAD2M,EAAAjJ,YAAA1D,EAAA,GAAlBgK,EAAK2C,EAAA,GAACjK,EAAMiK,EAAA,GAiB/C,OAfAF,OAAOC,QAAQhK,GAAQI,KAAI,SAAA8J,GAAqC,IAADC,EAAAnJ,YAAAkJ,EAAA,GAAlCvL,EAAgBwL,EAAA,GAAE4H,EAAU5H,EAAA,GAarD,OAXG4H,EAAWC,kBAAoBD,EAAW9R,iBACzCkL,EAAMgC,KAAK8E,KACNC,IAAI,gDAADzU,OAAiDsU,EAAWC,iBAAgB,KAAAvU,OAAIsU,EAAW9R,kBAC9FyC,MAAK,SAAAiJ,GACF,IAAOtL,EAAQsL,EAAK1M,KAAboB,KACJA,IACC0R,EAAW1R,KAAOA,EAE1B,KAGD,CAAC1B,EAAkBoT,EAC9B,IACO,CAACzK,EAAMtH,EAClB,IAEAwL,QAAQS,IAAId,GAAOzI,MAAK,WACpB6K,EAASlD,GAAayH,GAAU9R,QACpC,GACJ,EAEA6R,IACA,IAAMM,EAAWC,YAAYP,EAAgB,KAC7C,OAAO,kBAAMQ,cAAcF,EAAU,CACzC,GAAG,GAMP,CDJIG,GAEA,IAAAzR,EAAgCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAxC0R,EAAQxR,EAAA,GAAEyR,EAAWzR,EAAA,GAC5B0N,EAAkC3N,mBAAS,MAAK4N,EAAA1N,YAAAyN,EAAA,GAAzCgE,EAAS/D,EAAA,GAAEgE,EAAYhE,EAAA,GACxBiE,EE7CK,WAEX,IAAMC,EAAY,eAAAtV,EAAAuV,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAhU,MAAA,SAAAoU,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAqBf,OAnBIH,EAAkB,CACpBI,cAAe,CACXjV,QAAS,CACLmD,KAAM,gBACN+R,YAAa,uCAEjBC,QAASC,KACTC,QAAS,CACLC,OAAQ,mCACR9U,QAAS,UACTmK,IAAK,CACD,GAAI,oCACJ,IAAK,sBACL,MAAO,wCACP,EAAG,+BAEP4K,QAAQ,KAGnBT,EAAAU,OAAA,SAEM,IAAIC,KAAU,CACjBC,yBAAyB,EACzBC,eAAe,EACfd,qBACF,wBAAAC,EAAAc,OAAA,GAAAhB,EAAA,KACL,kBA5BiB,OAAA1V,EAAA2W,MAAA,KAAAC,UAAA,KA8BlB,MAAO,CACHtB,eAER,CFU8BuB,GASI,SAAAC,IAO7B,OAP6BA,EAAAvB,YAAAC,cAAAC,MAA9B,SAAAsB,IAAA,IAAAC,EAAAC,EAAA,OAAAzB,cAAAhU,MAAA,SAAA0V,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAC0BT,EAAkBC,eAAe,KAAD,EAAzC,KAAP0B,EAAOE,EAAAC,MACDC,mBAAmBC,eAAe,CAADH,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAClBkB,EAAQM,UAAS,OAA1B,OAARL,EAAQC,EAAAC,KAAAD,EAAApB,KAAA,EACRyB,EAAgBN,GAAS,OAEnC7B,EAAa4B,GAAS,yBAAAE,EAAAR,OAAA,GAAAK,EAAA,MACzBJ,MAAA,KAAAC,UAAA,CAE2B,SAAAY,IAG3B,OAH2BA,EAAAjC,YAAAC,cAAAC,MAA5B,SAAAgC,IAAA,IAAAR,EAAA,OAAAzB,cAAAhU,MAAA,SAAAkW,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAAA4B,EAAA5B,KAAA,EAC2BX,EAAUmC,UAAU,KAAD,EAA5B,OAARL,EAAQS,EAAAP,KAAAO,EAAA5B,KAAA,EACRyB,EAAgBN,GAAS,wBAAAS,EAAAhB,OAAA,GAAAe,EAAA,MAClCd,MAAA,KAAAC,UAAA,CAnBDtC,qBAAU,WACFqD,OAAOC,UACPL,EAAgBI,OAAOC,UAGxB,WAEuBd,EAAAH,MAAC,KAADC,UAAA,CAH1BiB,EACJ,GAAG,IAgBH,IAAMN,EAAe,eAAAvX,EAAAuV,YAAAC,cAAAC,MAAG,SAAAC,EAAOuB,GAAQ,IAAArJ,EAAAkK,EAAAvT,EAAA,OAAAiR,cAAAhU,MAAA,SAAAoU,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGR,OAF3B6B,OAAOV,SAAWA,EACZrJ,EAAO,IAAIsB,IAAK+H,GACtBc,EAAkBd,GAASrB,EAAAE,KAAA,EACJlI,EAAKvD,IAAI2N,cAAc,KAAD,EAKrB,OALlBF,EAAQlC,EAAAuB,OACEW,EAASpZ,QAErBuR,EAASjE,GAAoB8L,EAAS,KACzClC,EAAAqC,GACeC,SAAQtC,EAAAE,KAAA,GAAOlI,EAAKvD,IAAI8N,IAAIC,QAAO,QAAAxC,EAAAyC,GAAAzC,EAAAuB,KAA7C5S,GAAO,EAAAqR,EAAAqC,IAAArC,EAAAyC,IACbpI,EAASpE,GAAkBtH,IAC3B0L,EAAShE,GAA2BgL,EAASb,OAAS,gBAAkB,aAAY,yBAAAR,EAAAc,OAAA,GAAAhB,EAAA,KACvF,gBAZoB4C,GAAA,OAAAtY,EAAA2W,MAAA,KAAAC,UAAA,KAcfmB,EAAoB,SAACd,GACvBA,EAASsB,GAAG,SAAS,WACjBC,GACJ,IAEAvB,EAASsB,GAAG,kBAAiB,eAAA5L,EAAA4I,YAAAC,cAAAC,MAAE,SAAAgD,EAAOC,GAAG,OAAAlD,cAAAhU,MAAA,SAAAmX,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OACjC6B,OAAOV,UACPhH,EAASjE,GAAoB0M,EAAI,KACpC,wBAAAC,EAAAjC,OAAA,GAAA+B,EAAA,KACJ,gBAAAG,GAAA,OAAAjM,EAAAgK,MAAA,KAAAC,UAAE,CAAF,CAJ4B,IAM7BK,EAASsB,GAAG,eAAc,eAAA3L,EAAA2I,YAAAC,cAAAC,MAAE,SAAAoD,EAAOC,GAAS,IAAAvU,EAAA,OAAAiR,cAAAhU,MAAA,SAAAuX,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OACpC6B,OAAOV,WACD1S,EAAU2T,SAASY,GACzB7I,EAASpE,GAAkBtH,KAC9B,wBAAAwU,EAAArC,OAAA,GAAAmC,EAAA,KACJ,gBAAAG,GAAA,OAAApM,EAAA+J,MAAA,KAAAC,UAAE,CAAF,CALyB,GAM9B,EAEM4B,EAAW,eAAA3L,EAAA0I,YAAAC,cAAAC,MAAG,SAAAwD,IAAA,IAAArL,EAAA,OAAA4H,cAAAhU,MAAA,SAAA0X,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACuB,MAAjClI,EAAO,IAAIsB,IAAKyI,OAAOV,YACjBrJ,EAAKuL,iBAAmBvL,EAAKuL,gBAAgB5X,OAAK,CAAA2X,EAAApD,KAAA,eAAAoD,EAAApD,KAAA,EACpDlI,EAAKuL,gBAAgB5X,QAAQ,KAAD,EAEf,OAAvB0O,EAASnD,MAAcoM,EAAApD,KAAA,EACjBX,EAAUiE,sBAAsB,KAAD,EACrCzB,OAAOV,SAAW,KAAK,wBAAAiC,EAAAxC,OAAA,GAAAuC,EAAA,KAC1B,kBARgB,OAAApM,EAAA8J,MAAA,KAAAC,UAAA,KAwBjB,OAbAtC,qBAAU,WACNlC,KACA,IAAMyC,EAAWC,YAAY1C,GAAe,KAC5C,OAAO,kBAAM2C,cAAcF,EAAU,CACzC,GAAG,CAAChN,EAAOkC,UAGXuK,qBAAU,WACN1F,GAAgB/G,EAAOkC,SACvB,IAAM8K,EAAWC,aAAY,kBAAIlG,GAAgB/G,EAAOkC,QAAQ,GAAE,KAClE,OAAO,kBAAMgL,cAAcF,EAAU,CACzC,GAAG,CAAChN,EAAOkC,UAGP/M,eAACqc,IAAa,CAACrd,MAAOA,EAAMe,SAAA,CACxBH,cAAC0c,IAAW,IACZtc,eAACuc,IAAM,CAAAxc,SAAA,CACHH,cAAC4c,IAAM,CAACC,mBAAiB,EAACvc,MAAO,CAAC8D,gBAAgB,QAAQjE,SACtDC,eAAC0c,IAAO,CAAA3c,SAAA,CACJH,cAACiI,IAAU,CACPC,KAAK,QACL5D,MAAM,UACN,aAAW,cACXa,QAAS,kBAAMmT,GAAY,EAAK,EAACnY,SAEjCH,cAAC+c,KAAQ,MAGb/c,cAACgd,IAAU,CACPC,GAAE,IACF3c,MAAO,CAAC4c,eAAgB,OAAQhZ,QAAS,QAAQ/D,SAEjDH,cAAC0H,IAAM,CAACjH,IAAK0c,EAAMlZ,OAAQ,OAE/BjE,cAACkB,IAAU,CAACqJ,QAAQ,KAAIpK,SAAC,kBACzBH,cAAA,OAAKM,MAAO,CAAC8c,SAAU,KAEnBnS,EAAOkC,QACH/M,eAAC8E,IAAM,CACHqF,QAAQ,WACRjG,MAAM,UACNtD,KAAK,QACLmE,QAAS,WACLyW,GACJ,EAAEzb,SAAA,CACJkd,GAAapS,EAAOmC,OAAO,SAAqB,QAAfoK,EAACvM,EAAOkC,eAAO,IAAAqK,OAAA,EAAdA,EAAgB8F,QAAQ,MAE5Dtd,cAACkF,IAAM,CACHqF,QAAQ,WACRjG,MAAM,UACNtD,KAAK,QACLmE,QAAS,kBAtGxC,WAE2B,OAAAyV,EAAAb,MAAC,KAADC,UAAA,CAoGmBuD,EAAe,EAACpd,SAAC,iBAIpDH,cAACsF,IAAI,CAACC,WAAS,EAACjF,MAAO,CAACa,UAAW,IAAIhB,SACnCH,cAACsF,IAAI,CAACkB,MAAI,EAACC,GAAI,GAAGtG,SACdH,cAACwd,IAAM,CAAArd,SACHH,cAACyd,IAAK,CACFC,KAAI,IACJC,OAAO,EACPC,QAAS5d,cAACiU,GAAQ,YAMlC7T,eAACyd,IAAM,CACH3d,KAAMmY,EACNnO,QAAS,kBAAMoO,GAAY,EAAM,EACjCwF,WAAY,CAACxd,MAAO,CAACyd,SAAU,IAAKC,gBAAiB,OAAQ5Z,gBAAiB,SAASjE,SAAA,CAGvFH,cAACiI,IAAU,CAAC9C,QAAS,kBAAMmT,GAAY,EAAM,EAAEhY,MAAO,CAAC2d,UAAW,OAAO9d,SACrEH,cAACke,KAAS,MAEd9d,eAACsK,IAAI,CAACvF,QAAS,kBAAMmT,GAAY,EAAM,EAACnY,SAAA,CAEpCH,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWpB,IAAYC,GAAI,IAAI9c,SAC5CH,cAAC8H,IAAY,CAAClI,QAAQ,YAAY+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAGjFvJ,cAACqe,IAAa,CAAAle,SAAC,eACfH,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,wEAAyEC,OAAO,SAAQre,SAC5HH,cAAC8H,IAAY,CAAClI,QAAQ,WAAW+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAEhFvJ,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,iCAAkCC,OAAO,SAAQre,SACrFH,cAAC8H,IAAY,CAAClI,QAAQ,MAAM+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAE3EvJ,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,kCAAmCC,OAAO,SAAQre,SACtFH,cAAC8H,IAAY,CAAClI,QAAQ,QAAQ+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAG7EvJ,cAACqe,IAAa,CAAAle,SAAC,WACfH,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,2BAA4BC,OAAO,SAAQre,SAC/EH,cAAC8H,IAAY,CAAClI,QAAQ,WAAW+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAEhFvJ,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,kCAAmCC,OAAO,SAAQre,SACtFH,cAAC8H,IAAY,CAAClI,QAAQ,UAAU+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,UAE/EvJ,cAACwH,IAAQ,CAAC2W,QAAM,EAACC,UAAWE,IAAMC,KAAM,gCAAiCC,OAAO,SAAQre,SACpFH,cAAC8H,IAAY,CAAClI,QAAQ,UAAU+I,uBAAwB,CAACrI,MAAM,CAACiJ,WAAW,qBAQvG,CAEA,SAAS8T,GAAa5S,GAClB,IAAMzJ,EAAO,CAACJ,MAAO,GAAIqD,OAAQ,IAC3B3D,EAAQ,CAACme,YAAa,IAC5B,OAAQhU,GACJ,KAAK,EACD,OAAOzK,cAAC0H,IAAM,CAACjH,IAAI,iDAAiD6J,GAAItJ,EAAMV,MAAOA,IACzF,KAAK,GACD,OAAON,cAAC0H,IAAM,CAACjH,IAAI,iDAAiD6J,GAAItJ,EAAMV,MAAOA,IACzF,KAAK,IACD,OAAON,cAAC0H,IAAM,CAACjH,IAAI,kDAAkD6J,GAAItJ,EAAMV,MAAOA,IAC1F,KAAK,MACD,OAAON,cAAC0H,IAAM,CAACjH,IAAI,kDAAkD6J,GAAItJ,EAAMV,MAAOA,IAC1F,QACI,MAAO,GAEnB,CG3OAoe,IAASC,OACL3e,cAAC4e,IAAMC,WAAU,CAAA1e,SACbH,cAAC8e,IAAQ,CAAC3M,MAAOA,GAAMhS,SACnBH,cAACuX,GAAa,QAGtBwH,SAASC,eAAe,Q","file":"static/js/main.5ff518d6.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#723DF4'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.a27f1331.svg\";","export default __webpack_public_path__ + \"static/media/logo192.34cbf51d.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nimport token_list from \"../utils/tokenList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    function findPair(pairs){\n\n        const pair_address = token_list.tokens[network][contract_address]?.dexscreenerPair || undefined;\n\n        if(pair_address){\n            let p = pairs[0];\n            pairs.map(pair => {\n                if(pair_address.toLowerCase() === pair.pairAddress.toLowerCase()){\n                    p = pair;\n                }\n            })\n            return p;\n        }\n\n        return pairs[0];\n    }\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={findPair(data.pairs)}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails, detailsLabel, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\n\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport tokens_bnb from \"../utils/surge_bnb.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n\n    const srg_contract = new web3BSC.eth.Contract(IERC20_ABI, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    Object.entries(tokens_bnb.tokens).map( ([i,token]) => {\n        const contract =  new web3BSC.eth.Contract(IERC20_ABI, token.contract_address);\n        callsBSC.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }));\n\n        Object.entries(tokens_bnb.tokens).map( ([x,token],i) => {\n            store.dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: token.contract_address,//srg\n                balance: resp[i+2] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useState} from \"react\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('bnb');\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                {/*<Grid item xs={12}>*/}\n                {/*    <Paper style={{padding: 20, border: '1px solid #723DF4'}}>*/}\n                {/*        <Typography color=\"primary\" fontWeight={700}>New!</Typography>*/}\n                {/*        <Typography>Stats page displaying Rewards, Supply, KrakenTracker One Deposits, Burn and*/}\n                {/*            more.</Typography>*/}\n                {/*        <Link to=\"/stats\" component={RouterLink} underline=\"hover\">View Stats</Link>*/}\n                {/*    </Paper>*/}\n                {/*</Grid>*/}\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                                name=\"SRG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                            />\n\n                            {\n                                Object.entries(tokens_bnb.tokens).map( ([i,token]) => {\n                                     return <TokenListItem\n                                         key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"bnb\"\n                                        price={wallet.prices.bnb?.[token.contract_address]}\n                                    />\n                                })\n                            }\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                            />\n\n                            {\n                                Object.entries(tokens_eth.tokens).map( ([i,token]) => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"eth\"\n                                        price={wallet.prices.eth?.[token.contract_address]}\n                                    />\n                                })\n                            }\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_bnb.tokens).map(([i, token]) => {\n        const contract = new web3BSC.eth.Contract(srg_abi, token.contract_address);\n        callsBNB.push(contract.methods.calculatePrice().call);\n    })\n\n    makeBatchRequest(web3BSC, callsBNB).then(resp => {\n        const [\n            bnb_busd_reserves,\n            srg_bnb_price,\n        ] = resp\n\n        const bnb_price = bnb_busd_reserves.reserve0 / bnb_busd_reserves.reserve1\n\n        //BNB\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: 'native',\n            price: {\n                inUSD: bnb_price,\n                inBNB: 1\n            }\n        }));\n\n        const srg_price = (srg_bnb_price / (10 ** 9)) * bnb_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: token.contract_address,\n                price: {\n                    inUSD: (resp[i + 2] / (10 ** 18)) * srg_price,\n                }\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n    });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_eth.tokens).map(([i, token]) => {\n        const contract = new web3ETH.eth.Contract(srg_abi, token.contract_address);\n        callsETH.push(contract.methods.calculatePrice().call);\n    })\n\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0 / eth_usdc_reserves.reserve1 * (10 ** 12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: srg_price,\n                    inSRG: 1\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price / (10 ** 18)) * srg_price,\n                    inSRG: (bbk_srg_price / (10 ** 18))\n                }\n            }));\n\n            Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n                store.dispatch(updatePrices({\n                    chain: 'eth',\n                    contract_address: token.contract_address,\n                    price: {\n                        inUSD: (resp[i + 3] / (10 ** 18)) * srg_price,\n                    }\n                }))\n            })\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport getUserBalances from \"./utils/get_balances\";\n\n\nexport default function KrakenTracker() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark style={{backgroundImage:'none'}}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h6\">KrakenTracker</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>BBKS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://etherscan.io/token/0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://swap.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://chart.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/MuqGcn8MRH'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KrakenTracker from \"./KrakenTracker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <KrakenTracker/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}