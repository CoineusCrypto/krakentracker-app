{"version":3,"sources":["theme.js","images/logo.svg","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","components/BurntSupply.js","views/Stats.js","KrakenTracker.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","Math","pow","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","_ref","chain_id","pair_address","concat","getToken","token_address","useGetPairQuery","useGetTokenQuery","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","useStyles","TokenListItem","classes","wallet","useSelector","state","coineus","contract_address","name","network","price","rewards","rewardsUSD","rewardsSymbol","rewardsClaim","native","secondaryAction","_useState","useState","_useState2","_slicedToArray","setOpen","undefined","balances","_Fragment","Paper","marginBottom","ListItem","ListItemAvatar","onClick","Avatar","className","clsx","ListItemText","secondary","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","paddingTop","paddingRight","initialState","address","chain","type","info","avax","fuse","bnb","eth","lp","staked","prices","totals","pairs","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","tokens","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","balance","updateStaked","updatePrices","updateTotals","total","Object","entries","map","_ref2","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","configureStore","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","catch","err","req","request","data","add","execute","all","getUserBalances","wallet_address","store","getState","web3BSC","Web3","srg_contract","Contract","IERC20_ABI","callsBSC","getBalance","methods","balanceOf","tokens_bnb","token","contract","push","_resp","bnb_balance","srg_balance","dispatch","i","decimals","getBNB","web3ETH","bbks_contract","bbks_abi","coineus_abi","callsETH","checkPendingRewards","tokens_eth","_ref5","_ref6","_resp2","eth_balance","bbks_balance","bbks_rewards","pending_rewards","_ref7","_ref8","getETH","holdBBKSAmount","BBKS_CONTRACT","HomePage","_wallet$prices$bnb","_wallet$prices$bnb2","_wallet$balances$eth","_wallet$balances$eth2","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_wallet$info$eth","_wallet$info$eth2","_wallet$prices$eth4","_wallet$balances$eth3","_wallet$balances$eth4","pending","setPending","_useState3","_useState4","chainTab","setChainTab","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","fontSize","Tabs","variant","value","onChange","ev","val","Tab","id","wrap","HoldBBKS","_wallet$prices$bnb3","symbol","IconButton","window","provider","claimRewards","send","from","once","tx","on","error","receipt","disabled","CurrencyExchangeIcon","_wallet$prices$eth5","padding","border","Button","href","target","getPairPrices","_store$coineus","bnb_busd","unipair_abi","srg_bnb","srg_abi","callsBNB","getReserves","calculatePrice","bnb_busd_reserves","srg_bnb_price","bnb_price","reserve0","reserve1","inBNB","srg_price","inSRG","eth_usdc","srg_eth","bbk_eth","bbk_abi","eth_usdc_reserves","srg_eth_price","bbk_srg_price","eth_price","inETH","console","log","xyplot","BurnSupply","supply","burned","divider","PI","aBurned","angles","burnedStart","burnedEnd","supplyStart","supplyEnd","colors","Skeleton","FlexibleWidthXYPlot","xDomain","yDomain","left","right","bottom","ArcSeries","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","icon","Autorenew","Whatshot","disablePadding","ListItemIcon","paddingLeft","totalSupply","Stats","useEffect","axios","post","chart_data","tokenDayData","d","Date","date","priceUSD","substr","setChartData","setSupply","setBurned","_useState5","_useState6","chartData","_useState7","_useState8","crosshairValues","setCrosshairValues","bbks_supply","bbks_burned","strokeWidth","onMouseLeave","LineSeries","fill","onNearestX","index","Crosshair","values","line","itemsFormat","v","title","titleFormat","toLocaleDateString","KrakenTracker","_wallet$address","useDispatch","getDexScreener","tokenList","token_info","dexscreenerChain","dexscreenerPair","get","pair","interval","setInterval","clearInterval","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","providerOptions","_context","prev","next","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","abrupt","Web3Modal","disableInjectedProvider","cacheProvider","stop","apply","arguments","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","_context5","sent","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","ethereum","changeWeb3Modal","accounts","chainId","subscribeProvider","getAccounts","t0","parseInt","net","getId","t1","_x","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","close","clearCachedProvider","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","edge","MenuIcon","RouterLink","to","textDecoration","logo","flexGrow","getChainLogo","connectWallet","Routes","Route","path","exact","element","Drawer","onClose","PaperProps","minWidth","backgroundColor","alignSelf","CloseIcon","List","button","component","ListSubheader","Link","marginRight","sx","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.421c4e4b.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#723DF4'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.a27f1331.svg\";","export default __webpack_public_path__ + \"static/media/logo192.34cbf51d.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nimport token_list from \"../utils/tokenList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    function findPair(pairs){\n\n        const pair_address = token_list.tokens[network][contract_address]?.dexscreenerPair || undefined;\n\n        if(pair_address){\n            let p = pairs[0];\n            pairs.map(pair => {\n                if(pair_address.toLowerCase() === pair.pairAddress.toLowerCase()){\n                    p = pair;\n                }\n            })\n            return p;\n        }\n\n        return pairs[0];\n    }\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={findPair(data.pairs)}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsUSD, rewardsSymbol, rewardsClaim, native, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards != undefined && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary=\"Pending Rewards\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards)} ${rewardsSymbol}`}\n                        secondary={`${CoineusUSDFormat(rewardsUSD)}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700, paddingRight:1}}\n                        secondaryTypographyProps={{textAlign: 'right', paddingRight:1}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        {/*<TokenInfoDialog*/}\n        {/*    contract_address={contract_address}*/}\n        {/*    wrap={wrap}*/}\n        {/*    network={network}*/}\n        {/*    open={open}*/}\n        {/*    close={() => setOpen(false)}/>*/}\n    </Paper>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getBNB(rpc.bnb, wallet_address);\n    getETH(rpc.eth, wallet_address);\n}\n\nfunction getBNB(rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n\n    const srg_contract = new web3BSC.eth.Contract(IERC20_ABI, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    Object.entries(tokens_bnb.tokens).map(([i, token]) => {\n        const contract = new web3BSC.eth.Contract(IERC20_ABI, token.contract_address);\n        callsBSC.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 2] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(bbks_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        bbks_contract.methods.checkPendingRewards(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    Object.entries(tokens_eth.tokens).map(([i, token]) => {\n        const contract = new web3ETH.eth.Contract(IERC20_ABI, token.contract_address);\n        callsETH.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            bbks_rewards,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            info: {\n                pending_rewards: bbks_rewards / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n            store.dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 4] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab, IconButton,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useState} from \"react\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\nimport getUserBalances from \"../utils/get_balances\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nimport bbks_abi from \"../abis/bbk_abi.json\";\nconst holdBBKSAmount = 100;\nconst BBKS_CONTRACT = \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [chainTab, setChainTab] = useState('bnb');\n\n    const claimBBKSRewards = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(bbks_abi, BBKS_CONTRACT);\n\n            contract.methods\n                .claimRewards()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    // getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                                name=\"SRG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && Object.entries(tokens_bnb.tokens).map( ([i,token]) => {\n                                     return <TokenListItem\n                                         key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"bnb\"\n                                        price={wallet.prices.bnb?.[token.contract_address]}\n                                    />\n                                })\n                            }\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                                rewardsSymbol=\"SRG\"\n                                rewards={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"].pending_rewards}\n                                rewardsUSD={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"].pending_rewards * wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"].inUSD}\n                                rewardsClaim={<IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={claimBBKSRewards}\n                                    disabled={wallet.chain !==1}>\n                                    <CurrencyExchangeIcon fontSize=\"small\" />\n                            </IconButton>}\n\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && Object.entries(tokens_eth.tokens).map( ([i,token]) => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"eth\"\n                                        price={wallet.prices.eth?.[token.contract_address]}\n                                    />\n                                })\n                            }\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction HoldBBKS(){\n    return <Grid item xs={12}>\n        <Paper style={{padding: 20, border: '1px solid #723DF4', textAlign: 'center'}}>\n            <Typography style={{marginBottom:10}}>To unlock other SRG20 Tokens,<br/> you need to hold <strong>{holdBBKSAmount} BBKS</strong></Typography>\n            <Button variant=\"contained\" href=\"https://swap.surgeprotocol.io\" target=\"_blank\">Buy BBKS</Button>\n        </Paper>\n    </Grid>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_bnb.tokens).map(([i, token]) => {\n        const contract = new web3BSC.eth.Contract(srg_abi, token.contract_address);\n        callsBNB.push(contract.methods.calculatePrice().call);\n    })\n\n    makeBatchRequest(web3BSC, callsBNB).then(resp => {\n        const [\n            bnb_busd_reserves,\n            srg_bnb_price,\n        ] = resp\n\n        const bnb_price = bnb_busd_reserves.reserve0 / bnb_busd_reserves.reserve1\n\n        //BNB\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: 'native',\n            price: {\n                inUSD: bnb_price,\n                inBNB: 1\n            }\n        }));\n\n        const srg_price = (srg_bnb_price / (10 ** 9)) * bnb_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: token.contract_address,\n                price: {\n                    inUSD: (resp[i + 2] / (10 ** 18)) * srg_price,\n                }\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n    });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_eth.tokens).map(([i, token]) => {\n        const contract = new web3ETH.eth.Contract(srg_abi, token.contract_address);\n        callsETH.push(contract.methods.calculatePrice().call);\n    })\n\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0 / eth_usdc_reserves.reserve1 * (10 ** 12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: srg_price,\n                    inSRG: 1\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price / (10 ** 18)) * srg_price,\n                    inSRG: (bbk_srg_price / (10 ** 18))\n                }\n            }));\n\n            Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n                store.dispatch(updatePrices({\n                    chain: 'eth',\n                    contract_address: token.contract_address,\n                    price: {\n                        inUSD: (resp[i + 3] / (10 ** 18)) * srg_price,\n                    }\n                }))\n            })\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid, Avatar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot,\n    AccountBalance,\n    Bolt,\n    SwapVerticalCircle\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {supply, burned} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aBurned = 360 * (burned/supply) * (Math.PI / 180);\n\n    const angles = {\n\n        burnedStart: 0,\n        burnedEnd: aBurned,\n\n        supplyStart:  aBurned + divider,\n        supplyEnd: 360 * (Math.PI / 180) - divider,\n    }\n\n\n    const colors = {\n        supply: '#723DF4',\n        burned: '#fa5700'\n    }\n\n    if (\n        supply === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {((burned/supply) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={burned}\n                                  label=\"BURNED\"/>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply - burned}\n                                  label=\"CIRCULATION\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nimport {useSelector} from \"react-redux\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport {\n    XYPlot,\n    LineSeries,\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    FlexibleXYPlot,\n    FlexibleWidthXYPlot,\n    Crosshair\n} from 'react-vis';\nimport '../../node_modules/react-vis/dist/style.css';\n\nconst web3 = new Web3(\"https://cloudflare-eth.com/\");\nconst bbks_contract = new web3.eth.Contract(coineus_abi, \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\");\n\nconst calls = [\n    bbks_contract.methods.totalSupply().call,\n    bbks_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call\n];\n\nexport default function Stats() {\n    useEffect(() => {\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/somemoecoding/surgeswap-v1-eth\",\n            {\n                query: `\n            {\n              token(id:\"0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25\") {\n                tokenDayData {\n                  date\n                  dailyTxns\n                  dailyVolumeUSD\n                  priceUSD\n                }\n              }\n            }\n            `\n            }\n        ).then(resp => {\n            const data = resp.data.data.token.tokenDayData;\n            const chart_data = data.map(d => {\n                return {x: new Date(d.date * 1000), y: parseFloat(d.priceUSD.substr(0, 6))}\n            });\n            console.log(chart_data)\n            setChartData(chart_data)\n        })\n    }, [])\n\n    const [supply, setSupply] = useState(0);\n    const [burned, setBurned] = useState(0);\n    const [chartData, setChartData] = useState(undefined);\n    const [crosshairValues, setCrosshairValues] = useState([]);\n\n    const onMouseLeave = () => {\n        setCrosshairValues([])\n    };\n\n\n    const onNearestX = (value, {index}) => {\n        setCrosshairValues([{x: chartData[index].x, y: chartData[index].y}]);\n    };\n\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                bbks_supply,\n                bbks_burned\n            ] = resp;\n\n            setSupply(bbks_supply / (10 ** 9));\n            setBurned(bbks_burned / (10 ** 9));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 15}}>\n                        <FlexibleWidthXYPlot\n                            height={200}\n                            strokeWidth={3}\n                            margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                            onMouseLeave={onMouseLeave}\n                        >\n                            <LineSeries color=\"#723DF4\" fill=\"transparent\" data={chartData} onNearestX={onNearestX}/>\n                            <Crosshair\n                                values={crosshairValues}\n                                className={'test-class-name'}\n                                style={{\n                                    line:{background: \"#fff\"}\n                                }}\n                                itemsFormat={(values) => {\n                                    return values.map((v, i) => {\n                                        return {\n                                            title: \"Price\",\n                                            value: v.y\n                                        };\n                                    });\n                                }}\n                                titleFormat={(values) => {\n                                    return {\n                                        title: \"Date\",\n                                        value: values[0].x.toLocaleDateString()\n                                    };\n                                }}\n                            />\n                        </FlexibleWidthXYPlot>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={supply}\n                        burned={burned}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport getUserBalances from \"./utils/get_balances\";\nimport Stats from \"./views/Stats\";\n\n\nexport default function KrakenTracker() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark style={{backgroundImage:'none'}}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h6\">KrakenTracker</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>BBKS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://etherscan.io/token/0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://swap.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://chart.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/MuqGcn8MRH'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KrakenTracker from \"./KrakenTracker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <KrakenTracker/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}