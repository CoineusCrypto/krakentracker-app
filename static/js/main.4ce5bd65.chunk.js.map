{"version":3,"sources":["theme.js","images/logo.svg","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","components/TokenListItem.js","hooks/useTokenList.js","views/HomePage.js","redux/slices/coineusSlice.js","redux/services/dexscreener.js","redux/store.js","utils/promisify.js","utils/get_prices.js","utils/get_balances.js","components/BurntSupply.js","views/Stats.js","KrakenTracker.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","Math","pow","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","TokenListItem","classes","wallet","useSelector","state","coineus","contract_address","name","network","price","rewards","rewardsUSD","rewardsSymbol","rewardsClaim","native","secondaryAction","_useState","useState","_useState2","_slicedToArray","setOpen","undefined","balances","_Fragment","Paper","marginBottom","ListItem","ListItemAvatar","onClick","Avatar","concat","className","clsx","ListItemText","secondary","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","color","paddingTop","paddingRight","useTokenList","bnb","eth","tokenList","setTokenList","useEffect","calls","push","axios","get","Promise","all","then","resp","data","tokens","holdBBKSAmount","BBKS_CONTRACT","HomePage","_wallet$prices$bnb","_wallet$prices$bnb2","_wallet$balances$eth","_wallet$balances$eth2","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_wallet$info$eth","_wallet$info$eth2","_wallet$prices$eth4","_wallet$balances$eth3","_wallet$balances$eth4","pending","setPending","_useState3","_useState4","chainTab","setChainTab","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","totals","fontSize","Tabs","variant","value","onChange","ev","val","Tab","id","prices","wrap","HoldBBKS","map","token","_wallet$prices$bnb3","symbol","info","pending_rewards","IconButton","address","Web3","window","provider","Contract","bbks_abi","methods","claimRewards","send","from","once","tx","on","error","receipt","disabled","chain","CurrencyExchangeIcon","_wallet$prices$eth5","padding","border","Button","href","target","initialState","type","avax","fuse","lp","staked","pairs","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","balance","updateStaked","updatePrices","updateTotals","total","Object","entries","_ref","_ref2","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","configureStore","useGetPairQuery","useGetTokenQuery","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","batch","BatchRequest","promises","call","res","rej","catch","err","req","request","add","execute","getPairPrices","_store$coineus","store","getState","web3BSC","bnb_busd","unipair_abi","srg_bnb","srg_abi","callsBNB","getReserves","calculatePrice","contract","_resp","bnb_busd_reserves","srg_bnb_price","bnb_price","reserve0","reserve1","dispatch","inBNB","srg_price","inSRG","tokens_bnb","i","getBNB","web3ETH","eth_usdc","srg_eth","bbk_eth","bbk_abi","callsETH","_resp2","eth_usdc_reserves","srg_eth_price","bbk_srg_price","eth_price","inETH","tokens_eth","console","log","getETH","getUserBalances","wallet_address","srg_contract","IERC20_ABI","callsBSC","getBalance","balanceOf","bnb_balance","srg_balance","decimals","bbks_contract","coineus_abi","checkPendingRewards","eth_balance","bbks_balance","bbks_rewards","xyplot","BurnSupply","supply","burned","divider","PI","aBurned","angles","burnedStart","burnedEnd","supplyStart","supplyEnd","colors","Skeleton","FlexibleWidthXYPlot","xDomain","yDomain","left","right","bottom","ArcSeries","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","icon","Autorenew","Whatshot","disablePadding","ListItemIcon","paddingLeft","totalSupply","Stats","post","chart_data","tokenDayData","d","Date","date","priceUSD","substr","setChartData","setSupply","setBurned","_useState5","_useState6","chartData","_useState7","_useState8","crosshairValues","setCrosshairValues","bbks_supply","bbks_burned","strokeWidth","onMouseLeave","LineSeries","fill","onNearestX","index","Crosshair","values","line","itemsFormat","v","title","titleFormat","toLocaleDateString","KrakenTracker","_wallet$address","useDispatch","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","providerOptions","_context","prev","next","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","abrupt","Web3Modal","disableInjectedProvider","cacheProvider","stop","apply","arguments","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","_context5","sent","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","ethereum","changeWeb3Modal","accounts","chainId","subscribeProvider","getAccounts","t0","parseInt","net","getId","t1","_x","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","close","clearCachedProvider","interval","setInterval","clearInterval","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","edge","MenuIcon","RouterLink","to","textDecoration","logo","flexGrow","getChainLogo","connectWallet","Routes","Route","path","exact","element","Drawer","onClose","PaperProps","minWidth","backgroundColor","alignSelf","CloseIcon","List","button","component","ListSubheader","Link","marginRight","sx","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4ce5bd65.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#723DF4'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.a27f1331.svg\";","export default __webpack_public_path__ + \"static/media/logo192.34cbf51d.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsUSD, rewardsSymbol, rewardsClaim, native, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards != undefined && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary=\"Pending Rewards\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards)} ${rewardsSymbol}`}\n                        secondary={`${CoineusUSDFormat(rewardsUSD)}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700, paddingRight:1}}\n                        secondaryTypographyProps={{textAlign: 'right', paddingRight:1}}\n                    />\n                </ListItem>\n            </>\n        }\n    </Paper>\n}","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function useTokenList() {\n\n    const [tokenList, setTokenList] = useState({\n        bnb: [],\n        eth: []\n    });\n\n    useEffect(() => {\n        let calls = [];\n        calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n        calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n        Promise.all(calls).then(resp => {\n            setTokenList({\n                bnb: resp[0].data.tokens,\n                eth: resp[1].data.tokens\n            })\n        })\n    }, [])\n\n    return tokenList;\n\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    Tabs,\n    Tab, IconButton,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\n\nimport {useEffect, useState} from \"react\";\n\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\n\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport useTokenList from \"../hooks/useTokenList\";\nconst holdBBKSAmount = 100;\nconst BBKS_CONTRACT = \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const tokenList = useTokenList();\n\n    const [pending, setPending] = useState(false);\n    const [chainTab, setChainTab] = useState('bnb');\n\n    const claimBBKSRewards = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(bbks_abi, BBKS_CONTRACT);\n\n            contract.methods\n                .claimRewards()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    // getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                                name=\"SRG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && tokenList.bnb.map( token => {\n                                     return <TokenListItem\n                                         key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"bnb\"\n                                        price={wallet.prices.bnb?.[token.contract_address]}\n                                    />\n                                })\n                            }\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                                rewardsSymbol=\"SRG\"\n                                rewards={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"].pending_rewards}\n                                rewardsUSD={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"].pending_rewards * wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"].inUSD}\n                                rewardsClaim={<IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={claimBBKSRewards}\n                                    disabled={wallet.chain !==1}>\n                                    <CurrencyExchangeIcon fontSize=\"small\" />\n                            </IconButton>}\n\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && tokenList.eth.map( token => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"eth\"\n                                        price={wallet.prices.eth?.[token.contract_address]}\n                                    />\n                                })\n                            }\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction HoldBBKS(){\n    return <Grid item xs={12}>\n        <Paper style={{padding: 20, border: '1px solid #723DF4', textAlign: 'center'}}>\n            <Typography style={{marginBottom:10}}>To unlock other SRG20 Tokens,<br/> you need to hold <strong>{holdBBKSAmount} BBKS</strong></Typography>\n            <Button variant=\"contained\" href=\"https://swap.surgeprotocol.io\" target=\"_blank\">Buy BBKS</Button>\n        </Paper>\n    </Grid>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\nimport axios from \"axios\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n\n    let calls = [];\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n    Promise.all(calls).then(resp => {\n        getBNB(pairs, rpc.bnb, resp[0].data.tokens);\n        getETH(pairs, rpc.eth, resp[1].data.tokens);\n    })\n}\n\nfunction getBNB(pairs, rpc, tokenList) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n    ]\n\n    tokenList.map(token => {\n        const contract = new web3BSC.eth.Contract(srg_abi, token.contract_address);\n        callsBNB.push(contract.methods.calculatePrice().call);\n    })\n\n    makeBatchRequest(web3BSC, callsBNB).then(resp => {\n        const [\n            bnb_busd_reserves,\n            srg_bnb_price,\n        ] = resp\n\n        const bnb_price = bnb_busd_reserves.reserve0 / bnb_busd_reserves.reserve1\n\n        //BNB\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: 'native',\n            price: {\n                inUSD: bnb_price,\n                inBNB: 1\n            }\n        }));\n\n        const srg_price = (srg_bnb_price / (10 ** 9)) * bnb_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: token.contract_address,\n                price: {\n                    inUSD: (resp[i + 2] / (10 ** 18)) * srg_price,\n                }\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n    });\n\n}\n\nfunction getETH(pairs, rpc, tokenList) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n    ]\n\n    tokenList.map(token => {\n        const contract = new web3ETH.eth.Contract(srg_abi, token.contract_address);\n        callsETH.push(contract.methods.calculatePrice().call);\n    })\n\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0 / eth_usdc_reserves.reserve1 * (10 ** 12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: srg_price,\n                    inSRG: 1\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price / (10 ** 18)) * srg_price,\n                    inSRG: (bbk_srg_price / (10 ** 18))\n                }\n            }));\n\n            Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n                store.dispatch(updatePrices({\n                    chain: 'eth',\n                    contract_address: token.contract_address,\n                    price: {\n                        inUSD: (resp[i + 3] / (10 ** 18)) * srg_price,\n                    }\n                }))\n            })\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\nimport axios from \"axios\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n\n    let calls = [];\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n    Promise.all(calls).then(resp => {\n        getBNB(rpc.bnb, wallet_address, resp[0].data.tokens);\n        getETH(rpc.eth, wallet_address, resp[1].data.tokens);\n    })\n}\n\nfunction getBNB(rpc, wallet_address, tokenList) {\n\n    const web3BSC = new Web3(rpc);\n\n    const srg_contract = new web3BSC.eth.Contract(IERC20_ABI, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    tokenList.map(token => {\n        const contract = new web3BSC.eth.Contract(IERC20_ABI, token.contract_address);\n        callsBSC.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 2] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(rpc, wallet_address, tokenList) {\n\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(bbks_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        bbks_contract.methods.checkPendingRewards(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    tokenList.map(token => {\n        const contract = new web3ETH.eth.Contract(IERC20_ABI, token.contract_address);\n        callsETH.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            bbks_rewards,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            info: {\n                pending_rewards: bbks_rewards / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n            store.dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 4] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid, Avatar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot,\n    AccountBalance,\n    Bolt,\n    SwapVerticalCircle\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {supply, burned} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aBurned = 360 * (burned/supply) * (Math.PI / 180);\n\n    const angles = {\n\n        burnedStart: 0,\n        burnedEnd: aBurned,\n\n        supplyStart:  aBurned + divider,\n        supplyEnd: 360 * (Math.PI / 180) - divider,\n    }\n\n\n    const colors = {\n        supply: '#723DF4',\n        burned: '#fa5700'\n    }\n\n    if (\n        supply === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {((burned/supply) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={burned}\n                                  label=\"BURNED\"/>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply - burned}\n                                  label=\"CIRCULATION\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nimport {useSelector} from \"react-redux\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport {\n    XYPlot,\n    LineSeries,\n    XAxis,\n    YAxis,\n    HorizontalGridLines,\n    FlexibleXYPlot,\n    FlexibleWidthXYPlot,\n    Crosshair\n} from 'react-vis';\nimport '../../node_modules/react-vis/dist/style.css';\n\nconst web3 = new Web3(\"https://cloudflare-eth.com/\");\nconst bbks_contract = new web3.eth.Contract(coineus_abi, \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\");\n\nconst calls = [\n    bbks_contract.methods.totalSupply().call,\n    bbks_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call\n];\n\nexport default function Stats() {\n    useEffect(() => {\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/somemoecoding/surgeswap-v1-eth\",\n            {\n                query: `\n            {\n              token(id:\"0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25\") {\n                tokenDayData {\n                  date\n                  dailyTxns\n                  dailyVolumeUSD\n                  priceUSD\n                }\n              }\n            }\n            `\n            }\n        ).then(resp => {\n            const data = resp.data.data.token.tokenDayData;\n            const chart_data = data.map(d => {\n                return {x: new Date(d.date * 1000), y: parseFloat(d.priceUSD.substr(0, 6))}\n            });\n            console.log(chart_data)\n            setChartData(chart_data)\n        })\n    }, [])\n\n    const [supply, setSupply] = useState(0);\n    const [burned, setBurned] = useState(0);\n    const [chartData, setChartData] = useState(undefined);\n    const [crosshairValues, setCrosshairValues] = useState([]);\n\n    const onMouseLeave = () => {\n        setCrosshairValues([])\n    };\n\n\n    const onNearestX = (value, {index}) => {\n        setCrosshairValues([{x: chartData[index].x, y: chartData[index].y}]);\n    };\n\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                bbks_supply,\n                bbks_burned\n            ] = resp;\n\n            setSupply(bbks_supply / (10 ** 9));\n            setBurned(bbks_burned / (10 ** 9));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 15}}>\n                        <FlexibleWidthXYPlot\n                            height={200}\n                            strokeWidth={3}\n                            margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                            onMouseLeave={onMouseLeave}\n                        >\n                            <LineSeries color=\"#723DF4\" fill=\"transparent\" data={chartData} onNearestX={onNearestX}/>\n                            <Crosshair\n                                values={crosshairValues}\n                                className={'test-class-name'}\n                                style={{\n                                    line:{background: \"#fff\"}\n                                }}\n                                itemsFormat={(values) => {\n                                    return values.map((v, i) => {\n                                        return {\n                                            title: \"Price\",\n                                            value: v.y\n                                        };\n                                    });\n                                }}\n                                titleFormat={(values) => {\n                                    return {\n                                        title: \"Date\",\n                                        value: values[0].x.toLocaleDateString()\n                                    };\n                                }}\n                            />\n                        </FlexibleWidthXYPlot>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={supply}\n                        burned={burned}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport getUserBalances from \"./utils/get_balances\";\nimport Stats from \"./views/Stats\";\nimport useTokenList from \"./hooks/useTokenList\";\n\n\nexport default function KrakenTracker() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const list = useTokenList();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark style={{backgroundImage:'none'}}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h6\">KrakenTracker</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>BBKS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://etherscan.io/token/0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://swap.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://chart.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/MuqGcn8MRH'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>Info</ListSubheader>\n                        <ListItem button component={Link} href={'https://krakentracker.com/listing'} target=\"_blank\">\n                            <ListItemText primary=\"List SRG20 Token\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KrakenTracker from \"./KrakenTracker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <KrakenTracker/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}