{"version":3,"sources":["theme.js","images/logo.svg","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","components/TokenListItem.js","components/Transactions.js","views/HomePage.js","hooks/useTokenList.js","redux/slices/coineusSlice.js","redux/services/dexscreener.js","redux/store.js","utils/promisify.js","utils/get_prices.js","utils/get_balances.js","components/BurntSupply.js","views/Stats.js","KrakenTracker.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","Math","pow","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","useStyles","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","TokenListItem","classes","wallet","useSelector","state","coineus","contract_address","name","network","price","rewards","rewardsUSD","rewardsSymbol","rewardsClaim","native","secondaryAction","undefined","balances","_Fragment","Paper","marginBottom","ListItem","ListItemAvatar","Avatar","concat","className","clsx","ListItemText","secondary","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","color","paddingTop","paddingRight","Transactions","_useState","useState","_useState2","_slicedToArray","transactions","setTransactions","_useState3","_useState4","setOpen","endpoint","useEffect","axios","post","query","address","then","resp","_resp$data$data","data","boughts","solds","map","b","type","tmp","_toConsumableArray","sort","a","blockTimestamp","IconButton","onClick","marginRight","ReceiptLongIcon","fullScreen","PaperProps","backgroundColor","padding","Grid","container","spacing","item","xs","Button","List","t","ArrowUpwardIcon","ArrowDownwardIcon","Date","toLocaleString","fontSize","Link","href","transactionHash","target","textDecoration","tokens","beans","toUpperCase","holdBBKSAmount","BBKS_CONTRACT","HomePage","_wallet$prices$bnb","_wallet$prices$bnb2","_wallet$balances$eth","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_wallet$info$eth","_wallet$info$eth$0xF","_wallet$info$eth2","_wallet$info$eth2$0xF","_wallet$prices$eth4","_wallet$prices$eth4$","_wallet$balances$eth2","tokenList","bnb","eth","setTokenList","calls","push","get","Promise","all","useTokenList","pending","setPending","chainTab","setChainTab","Container","maxWidth","paddingBottom","totals","Tabs","variant","value","onChange","ev","val","Tab","id","prices","wrap","HoldBBKS","token","_wallet$prices$bnb3","symbol","info","pending_rewards","Web3","window","provider","Contract","bbks_abi","methods","claimRewards","send","from","once","tx","on","error","receipt","disabled","chain","CurrencyExchangeIcon","_wallet$prices$eth5","_wallet$balances$eth3","border","initialState","avax","fuse","lp","staked","pairs","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","balance","updateStaked","updatePrices","updateTotals","total","Object","entries","_ref","_ref2","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","chain_id","pair_address","getToken","token_address","configureStore","useGetPairQuery","useGetTokenQuery","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","batch","BatchRequest","promises","call","res","rej","catch","err","req","request","add","execute","getPairPrices","_store$coineus","store","getState","web3BSC","bnb_busd","unipair_abi","srg_bnb","srg_abi","callsBNB","getReserves","calculatePrice","contract","_resp","bnb_busd_reserves","srg_bnb_price","bnb_price","reserve0","reserve1","dispatch","inBNB","srg_price","inSRG","i","getBNB","web3ETH","eth_usdc","srg_eth","bbk_eth","bbk_abi","callsETH","_resp2","eth_usdc_reserves","srg_eth_price","bbk_srg_price","eth_price","inETH","console","log","getETH","getUserBalances","wallet_address","srg_contract","IERC20_ABI","callsBSC","getBalance","balanceOf","bnb_balance","srg_balance","decimals","bbks_contract","coineus_abi","checkPendingRewards","eth_balance","bbks_balance","bbks_rewards","xyplot","BurnSupply","supply","burned","divider","PI","aBurned","angles","burnedStart","burnedEnd","supplyStart","supplyEnd","colors","Skeleton","FlexibleWidthXYPlot","xDomain","yDomain","left","right","bottom","ArcSeries","radiusDomain","center","x","y","angle0","angle","opacity","radius","radius0","colorType","StatListItem","icon","Autorenew","Whatshot","disablePadding","ListItemIcon","paddingLeft","totalSupply","Stats","chart_data","tokenDayData","d","date","priceUSD","substr","setChartData","setSupply","setBurned","_useState5","_useState6","chartData","_useState7","_useState8","crosshairValues","setCrosshairValues","bbks_supply","bbks_burned","strokeWidth","onMouseLeave","LineSeries","fill","onNearestX","index","Crosshair","values","line","itemsFormat","v","title","titleFormat","toLocaleDateString","KrakenTracker","_wallet$address","useDispatch","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","providerOptions","_context","prev","next","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","abrupt","Web3Modal","disableInjectedProvider","cacheProvider","stop","apply","arguments","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","_context5","sent","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","ethereum","changeWeb3Modal","accounts","chainId","subscribeProvider","getAccounts","t0","parseInt","net","getId","t1","_x","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","close","clearCachedProvider","interval","setInterval","clearInterval","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","edge","MenuIcon","RouterLink","to","logo","flexGrow","getChainLogo","connectWallet","Routes","Route","path","exact","element","Drawer","onClose","minWidth","alignSelf","CloseIcon","button","component","ListSubheader","sx","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.e330ea20.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#723DF4'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.a27f1331.svg\";","export default __webpack_public_path__ + \"static/media/logo192.34cbf51d.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsUSD, rewardsSymbol, rewardsClaim, native, secondaryAction} = props;\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards !== undefined && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary=\"Pending Rewards\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards)} ${rewardsSymbol}`}\n                        secondary={`${CoineusUSDFormat(rewardsUSD)}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700, paddingRight:1}}\n                        secondaryTypographyProps={{textAlign: 'right', paddingRight:1}}\n                    />\n                </ListItem>\n            </>\n        }\n    </Paper>\n}","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {\n    Avatar, Button, Dialog,\n    Grid, IconButton,\n    Link,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\n\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {useSelector} from \"react-redux\";\nimport ReceiptLongIcon from '@mui/icons-material/ReceiptLong';\n\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nexport default function Transactions(props) {\n\n    const {network} = props;\n\n    const {wallet} = useSelector(state => state.coineus);\n    // const wallet = {address:\"0xa07f6bccabcd94a873009782d041a0f1de6f5677\"}\n\n\n    const [transactions, setTransactions] = useState([]);\n\n    const [open, setOpen] = useState(false);\n\n    const endpoint = network === \"eth\" ? \"https://api.thegraph.com/subgraphs/name/somemoecoding/surgeswap-v1-eth\" : \"https://api.thegraph.com/subgraphs/name/somemoecoding/surgeswap-v1\"\n\n    useEffect(() => {\n        if (!open) return;\n        axios.post(\n            endpoint,\n            {\n                query: `\n                {\n                  boughts(\n                    first: 100\n                    where:{\n                      from :\"${wallet.address}\"\n                    }\n                    orderBy: blockTimestamp,\n                    orderDirection:desc\n                  ) {\n                    from\n                    to\n                    transactionHash\n                    blockTimestamp\n                    tokens\n                    beans\n                    dollarBuy\n                  }\n                  solds(\n                    first: 100\n                    where:{\n                      to :\"${wallet.address}\"\n                    }\n                    orderBy: blockTimestamp,\n                    orderDirection:desc\n                  ) {\n                    from\n                    to\n                    transactionHash\n                    blockTimestamp\n                    tokens\n                    beans\n                    dollarSell\n                  }\n                }\n            `\n            }\n        ).then(resp => {\n            const {boughts, solds} = resp.data.data;\n\n            boughts.map(b => {\n                b.type = 'buy'\n            })\n\n            solds.map(b => {\n                b.type = 'sell'\n            })\n\n            const tmp = [...boughts, ...solds];\n\n            tmp.sort((a, b) => {\n                if (a.blockTimestamp > b.blockTimestamp) {\n                    return -1;\n                }\n\n                if (a.blockTimestamp < b.blockTimestamp) {\n                    return 1;\n                }\n\n                return 0;\n            })\n\n            setTransactions(tmp)\n        })\n    }, [open])\n\n    return <>\n        <IconButton\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => setOpen(true)}\n            style={{marginRight: -10, display: wallet.address !== undefined ? '' : 'none'}}\n        ><ReceiptLongIcon/></IconButton>\n        <Dialog\n            open={open}\n            fullScreen\n            PaperProps={{style: {backgroundColor: '#000', backgroundImage: 'none', padding: 20}}}\n        >\n            <Grid container spacing={2}>\n                <Grid item xs={12} textAlign=\"right\">\n                    <Button onClick={() => setOpen(false)}>Close</Button>\n                </Grid>\n                <Grid item xs={12}>\n\n                    <List>\n                        {\n                            transactions.length === 0 &&\n                            <Typography style={{padding: 20}}>No transactions</Typography>\n                        }\n                        {\n                            transactions.map(t => {\n                                return <Paper style={{marginBottom: 10}}>\n                                    <ListItem key={t.transactionHash}>\n                                        <ListItemAvatar>\n                                            <Avatar style={{backgroundColor:\"#000\"}}>\n                                                {\n                                                    t.type === 'buy' ?\n                                                        <ArrowUpwardIcon style={{\n                                                            color: '#00FF00'\n                                                        }}/> :\n                                                        <ArrowDownwardIcon style={{\n                                                            color: 'red'\n                                                        }}/>\n                                                }\n                                            </Avatar>\n                                        </ListItemAvatar>\n\n                                        <ListItemText\n                                            primary={(new Date(t.blockTimestamp * 1000)).toLocaleString()}\n                                            primaryTypographyProps={{fontWeight: 700, fontSize:12}}\n                                            secondary={<Link href={`https://etherscan.io/tx/${t.transactionHash}`}\n                                                             target=\"_blank\" style={{textDecoration: 'none'}}>View\n                                                Tx</Link>}\n                                            secondaryTypographyProps={{fontSize:11}}\n                                        />\n                                        <ListItemText\n                                            primary={<>\n                                                {`${CoineusCryptoFormat(t.tokens / 10 ** 9)} SRG`}\n                                            </>}\n                                            secondary={`${CoineusCryptoFormat(t.beans / 10 ** 18)} ${network.toUpperCase()}`}\n                                            primaryTypographyProps={{textAlign: 'right', fontWeight: 700, fontSize:12}}\n                                            secondaryTypographyProps={{textAlign: 'right', fontSize:11}}\n                                        />\n                                    </ListItem>\n                                </Paper>\n                            })\n                        }\n\n                    </List>\n\n                </Grid>\n            </Grid>\n        </Dialog>\n    </>\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    Tabs,\n    Tab, IconButton,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\n\nimport {useState} from \"react\";\n\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusUSDFormat} from \"../utils/currency_format\";\nimport CurrencyExchangeIcon from '@mui/icons-material/CurrencyExchange';\n\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport useTokenList from \"../hooks/useTokenList\";\nimport Transactions from \"../components/Transactions\";\n\nconst holdBBKSAmount = 100;\nconst BBKS_CONTRACT = \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const tokenList = useTokenList();\n\n    const [pending, setPending] = useState(false);\n    const [chainTab, setChainTab] = useState('bnb');\n\n    const claimBBKSRewards = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(bbks_abi, BBKS_CONTRACT);\n\n            contract.methods\n                .claimRewards()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    // getUserInfo();\n                    setPending(false);\n                });\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n\n                    {\n                        wallet.address && <Paper style={{marginTop: 10}}>\n                            <ListItem>\n                                <ListItemText\n                                    primary={CoineusUSDFormat(\n                                        wallet.totals.bnb +\n                                        wallet.totals.eth\n                                    )}\n                                    secondary=\"Total Wallet Value\"\n                                    primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                    secondaryTypographyProps={{textAlign: 'right'}}\n                                />\n                            </ListItem>\n                        </Paper>\n                    }\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'bnb' && <>\n                            {\n                                wallet.address && <Paper style={{marginTop: 10}}>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                            secondary=\"Total BNB Value\"\n                                            primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </Paper>\n                            }\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                                name=\"SRG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                                secondaryAction={<Transactions network=\"bnb\" />}\n                            />\n\n                            <HoldBBKS/>\n\n                            {\n                                (!wallet.address || wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount) && tokenList.bnb.map(token => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"bnb\"\n                                        price={wallet.prices.bnb?.[token.contract_address]}\n                                    />\n                                })\n                            }\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            {\n                                wallet.address && <Paper style={{marginTop: 10}}>\n                                    <ListItem>\n                                        <ListItemText\n                                            primary={CoineusUSDFormat(wallet.totals.eth)}\n                                            secondary=\"Total ETH Value\"\n                                            primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                            secondaryTypographyProps={{textAlign: 'right'}}\n                                        />\n                                    </ListItem>\n                                </Paper>\n                            }\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                                secondaryAction={<Transactions network=\"eth\" />}\n                            />\n\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                                rewardsSymbol=\"SRG\"\n                                rewards={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]?.pending_rewards}\n                                rewardsUSD={wallet.info.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]?.pending_rewards * wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]?.inUSD}\n                                rewardsClaim={<IconButton\n                                    color=\"primary\"\n                                    size=\"small\"\n                                    onClick={claimBBKSRewards}\n                                    disabled={wallet.chain !== 1}>\n                                    <CurrencyExchangeIcon fontSize=\"small\"/>\n                                </IconButton>}\n\n                            />\n\n                            <HoldBBKS/>\n\n                            {\n                                (!wallet.address || wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount) && tokenList.eth.map(token => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"eth\"\n                                        price={wallet.prices.eth?.[token.contract_address]}\n                                    />\n                                })\n                            }\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction HoldBBKS() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    if (wallet.address && wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount) {\n        return <Grid item xs={12}>\n            <Paper style={{padding: 20, border: '1px solid #723DF4', textAlign: 'center'}}>\n                <Typography style={{marginBottom: 10}}>To unlock other SRG20 Tokens,<br/> you need to\n                    hold <strong>{holdBBKSAmount} BBKS</strong></Typography>\n                <Button variant=\"contained\" href=\"https://swap.surgeprotocol.io\" target=\"_blank\">Buy BBKS</Button>\n            </Paper>\n        </Grid>\n    }\n\n    return <></>\n\n}","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function useTokenList() {\n\n    const [tokenList, setTokenList] = useState({\n        bnb: [],\n        eth: []\n    });\n\n    useEffect(() => {\n        let calls = [];\n        calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n        calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n        Promise.all(calls).then(resp => {\n            setTokenList({\n                bnb: resp[0].data.tokens,\n                eth: resp[1].data.tokens\n            })\n        })\n    }, [])\n\n    return tokenList;\n\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet = initialState.wallet;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\nimport axios from \"axios\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n\n    let calls = [];\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n    Promise.all(calls).then(resp => {\n        getBNB(pairs, rpc.bnb, resp[0].data.tokens);\n        getETH(pairs, rpc.eth, resp[1].data.tokens);\n    })\n}\n\nfunction getBNB(pairs, rpc, tokenList) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n    ]\n\n    tokenList.map(token => {\n        const contract = new web3BSC.eth.Contract(srg_abi, token.contract_address);\n        callsBNB.push(contract.methods.calculatePrice().call);\n        return token;\n    })\n\n    makeBatchRequest(web3BSC, callsBNB).then(resp => {\n        const [\n            bnb_busd_reserves,\n            srg_bnb_price,\n        ] = resp\n\n        const bnb_price = bnb_busd_reserves.reserve0 / bnb_busd_reserves.reserve1\n\n        //BNB\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: 'native',\n            price: {\n                inUSD: bnb_price,\n                inBNB: 1\n            }\n        }));\n\n        const srg_price = (srg_bnb_price / (10 ** 9)) * bnb_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        tokenList.map((token,i) => {\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: token.contract_address,\n                price: {\n                    inUSD: (resp[i + 2] / (10 ** 18)) * srg_price,\n                }\n            }));\n            return token;\n        })\n\n        store.dispatch(updateTotals('bnb'));\n    });\n\n}\n\nfunction getETH(pairs, rpc, tokenList) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n    ]\n\n    tokenList.map(token => {\n        const contract = new web3ETH.eth.Contract(srg_abi, token.contract_address);\n        callsETH.push(contract.methods.calculatePrice().call);\n        return token;\n    })\n\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0 / eth_usdc_reserves.reserve1 * (10 ** 12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: srg_price,\n                    inSRG: 1\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price / (10 ** 18)) * srg_price,\n                    inSRG: (bbk_srg_price / (10 ** 18))\n                }\n            }));\n\n            tokenList.map((token,i) => {\n                store.dispatch(updatePrices({\n                    chain: 'eth',\n                    contract_address: token.contract_address,\n                    price: {\n                        inUSD: (resp[i + 3] / (10 ** 18)) * srg_price,\n                    }\n                }));\n                return token;\n            })\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport bbks_abi from \"../abis/bbk_abi.json\";\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport axios from \"axios\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    let calls = [];\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_bnb.json'));\n    calls.push(axios.get('https://coineus.app/assets/apps/krakentracker/srg20_eth.json'));\n\n    Promise.all(calls).then(resp => {\n        getBNB(rpc.bnb, wallet_address, resp[0].data.tokens);\n        getETH(rpc.eth, wallet_address, resp[1].data.tokens);\n    })\n}\n\nfunction getBNB(rpc, wallet_address, tokenList) {\n\n    const web3BSC = new Web3(rpc);\n\n    const srg_contract = new web3BSC.eth.Contract(IERC20_ABI, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    tokenList.map(token => {\n        const contract = new web3BSC.eth.Contract(IERC20_ABI, token.contract_address);\n        callsBSC.push(contract.methods.balanceOf(wallet_address).call);\n        return token;\n    })\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }));\n\n        tokenList.map((token,i) => {\n            store.dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 2] / (10 ** token.decimals)\n            }));\n            return token;\n        })\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(rpc, wallet_address, tokenList) {\n\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(bbks_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        bbks_contract.methods.checkPendingRewards(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    tokenList.map(token => {\n        const contract = new web3ETH.eth.Contract(IERC20_ABI, token.contract_address);\n        callsETH.push(contract.methods.balanceOf(wallet_address).call);\n        return token;\n    })\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            bbks_rewards,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateInfo({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            info: {\n                pending_rewards: bbks_rewards / (10 ** 9)\n            }\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        tokenList.map((token,i) => {\n            store.dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: token.contract_address,//srg\n                balance: resp[i + 4] / (10 ** token.decimals)\n            }));\n            return token;\n        })\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, ListItem, ListItemIcon, ListItemText, Skeleton, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {\n    Autorenew,\n    Whatshot\n} from \"@mui/icons-material\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {supply, burned} = props;\n\n    const divider = 360 * .0075 * (Math.PI / 180);\n\n    const aBurned = 360 * (burned/supply) * (Math.PI / 180);\n\n    const angles = {\n\n        burnedStart: 0,\n        burnedEnd: aBurned,\n\n        supplyStart:  aBurned + divider,\n        supplyEnd: 360 * (Math.PI / 180) - divider,\n    }\n\n\n    const colors = {\n        supply: '#723DF4',\n        burned: '#fa5700'\n    }\n\n    if (\n        supply === undefined\n    ) {\n        return <Paper style={{padding: 20}}>\n            <Skeleton variant=\"circular\" height={180} width={180} style={{margin: '0 auto'}}/>\n        </Paper>;\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: angles.supplyStart,\n                            angle: angles.supplyEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angles.burnedStart,\n                            angle: angles.burnedEnd,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        }\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700'\n                }}\n            >\n                {((burned/supply) * 100).toFixed(2)}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n\n            <Grid container>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply}\n                                  label=\"SUPPLY\"/>\n                </Grid>\n                <Grid item xs={6}>\n                    <StatListItem icon={<Whatshot style={{color: colors.burned}}/>} color={colors.burned}\n                                  value={burned}\n                                  label=\"BURNED\"/>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <StatListItem icon={<Autorenew style={{color: colors.supply}}/>} color={colors.supply}\n                                  value={supply - burned}\n                                  label=\"CIRCULATION\"/>\n                </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n\nfunction StatListItem(props) {\n    const {color, value, label, icon} = props;\n\n    return <ListItem disablePadding>\n        <ListItemIcon style={{paddingLeft: 15}}>\n            {icon}\n        </ListItemIcon>\n        <ListItemText\n            primary={CoineusCryptoFormat(value)}\n            secondary={label}\n            primaryTypographyProps={{fontWeight: 700, style: {color}}}\n            secondaryTypographyProps={{fontSize: '.75rem', style: {color}}}\n        />\n    </ListItem>;\n}\n","import {Container, Grid, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nimport {\n    LineSeries,\n    FlexibleWidthXYPlot,\n    Crosshair\n} from 'react-vis';\nimport '../../node_modules/react-vis/dist/style.css';\n\nconst web3 = new Web3(\"https://cloudflare-eth.com/\");\nconst bbks_contract = new web3.eth.Contract(coineus_abi, \"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\");\n\nconst calls = [\n    bbks_contract.methods.totalSupply().call,\n    bbks_contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call\n];\n\nexport default function Stats() {\n    useEffect(() => {\n        axios.post(\n            \"https://api.thegraph.com/subgraphs/name/somemoecoding/surgeswap-v1-eth\",\n            {\n                query: `\n            {\n              token(id:\"0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25\") {\n                tokenDayData {\n                  date\n                  dailyTxns\n                  dailyVolumeUSD\n                  priceUSD\n                }\n              }\n            }\n            `\n            }\n        ).then(resp => {\n            const data = resp.data.data.token.tokenDayData;\n            const chart_data = data.map(d => {\n                return {x: new Date(d.date * 1000), y: parseFloat(d.priceUSD.substr(0, 6))}\n            });\n            console.log(chart_data)\n            setChartData(chart_data)\n        })\n    }, [])\n\n    const [supply, setSupply] = useState(0);\n    const [burned, setBurned] = useState(0);\n    const [chartData, setChartData] = useState(undefined);\n    const [crosshairValues, setCrosshairValues] = useState([]);\n\n    const onMouseLeave = () => {\n        setCrosshairValues([])\n    };\n\n\n    const onNearestX = (value, {index}) => {\n        setCrosshairValues([{x: chartData[index].x, y: chartData[index].y}]);\n    };\n\n\n    useEffect(() => {\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                bbks_supply,\n                bbks_burned\n            ] = resp;\n\n            setSupply(bbks_supply / (10 ** 9));\n            setBurned(bbks_burned / (10 ** 9));\n        })\n    }, [])\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n                <Grid item xs={12}>\n                    <Paper style={{padding: 15}}>\n                        <FlexibleWidthXYPlot\n                            height={200}\n                            strokeWidth={3}\n                            margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                            onMouseLeave={onMouseLeave}\n                        >\n                            <LineSeries color=\"#723DF4\" fill=\"transparent\" data={chartData} onNearestX={onNearestX}/>\n                            <Crosshair\n                                values={crosshairValues}\n                                className={'test-class-name'}\n                                style={{\n                                    line:{background: \"#fff\"}\n                                }}\n                                itemsFormat={(values) => {\n                                    return values.map((v, i) => {\n                                        return {\n                                            title: \"Price\",\n                                            value: v.y\n                                        };\n                                    });\n                                }}\n                                titleFormat={(values) => {\n                                    return {\n                                        title: \"Date\",\n                                        value: values[0].x.toLocaleDateString()\n                                    };\n                                }}\n                            />\n                        </FlexibleWidthXYPlot>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={supply}\n                        burned={burned}\n                    />\n                </Grid>\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport getUserBalances from \"./utils/get_balances\";\nimport Stats from \"./views/Stats\";\n\n\nexport default function KrakenTracker() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n\n        getUserBalances(wallet.address);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark style={{backgroundImage:'none'}}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h6\">KrakenTracker</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>BBKS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://etherscan.io/token/0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://swap.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://chart.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/MuqGcn8MRH'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>Info</ListSubheader>\n                        <ListItem button component={Link} href={'https://krakentracker.com/listing'} target=\"_blank\">\n                            <ListItemText primary=\"List SRG20 Token\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KrakenTracker from \"./KrakenTracker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <KrakenTracker/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}