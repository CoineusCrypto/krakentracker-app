{"version":3,"sources":["theme.js","images/logo.svg","images/logo192.png","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","KrakenTracker.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","CoineusLoading","props","_jsx","Dialog","open","children","_jsxs","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","Math","pow","maxDigits","parseFloat","toFixed","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","_ref","chain_id","pair_address","concat","getToken","token_address","useGetPairQuery","useGetTokenQuery","makeStyles","networkChip","marginLeft","top","height","display","backgroundSize","backgroundImage","negative","color","positive","useStyles","TokenListItem","_wallet$staked$networ","_wallet$staked$networ2","classes","wallet","useSelector","state","coineus","contract_address","name","network","price","rewards","rewardsClaim","native","cnsDetails","wrap","detailsLabel","secondaryAction","_useState","useState","_useState2","_slicedToArray","setOpen","undefined","balances","_Fragment","Paper","marginBottom","ListItem","ListItemAvatar","onClick","Avatar","className","clsx","ListItemText","secondary","inUSD","primaryTypographyProps","fontWeight","secondaryTypographyProps","staked","paddingTop","fuse","allTime","symbol","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","BigNumber","plus","sub","minus","dividedBy","getCNSEarned","initialState","address","chain","type","info","avax","bnb","eth","lp","prices","totals","pairs","fUSDcontract","fUSDFUSEpair","CEUSFUSEpair","VOLTFUSEpair","FSBFUSEpair","CEUSLITPair","ETHFUSEPair","BNBfUSDPair","BTCFUSEPair","USDCAVAXpair","DGNXAVAXpair","BNBBUSDpair","ETHUSDCPair","ETHSRGPair","ETHFEGPair","BNBFEGPair","rpc","tokens","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateLPInfo","updateBalances","updateStaked","updatePrices","updateTotals","total","Object","entries","map","_ref2","_ref3","_ref4","resetWallet","updateTokens","JSON","parse","stringify","_coineusSlice$actions","actions","configureStore","reducer","_defineProperty","coineusReducer","middleware","getDefaultMiddleware","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","catch","err","req","request","data","add","execute","all","getUserBalances","wallet_address","_store$coineus","store","getState","web3BSC","Web3","srg_contract","Contract","IERC20_ABI","callsBSC","getBalance","methods","balanceOf","tokens_bnb","token","contract","push","_resp","bnb_balance","srg_balance","dispatch","i","decimals","getBNB","web3ETH","bbks_contract","coineus_abi","callsETH","tokens_eth","_ref5","_ref6","_resp2","eth_balance","bbks_balance","_ref7","_ref8","getETH","holdBBKSAmount","HomePage","_wallet$prices$bnb","_wallet$prices$bnb2","_wallet$balances$eth","_wallet$balances$eth2","_wallet$prices$eth","_wallet$prices$eth2","_wallet$prices$eth3","_wallet$balances$eth3","_wallet$balances$eth4","_useState3","_useState4","_useState5","_useState6","chainTab","setChainTab","Container","maxWidth","Grid","container","spacing","paddingBottom","item","xs","fontSize","Tabs","variant","value","onChange","ev","val","Tab","id","HoldBBKS","_wallet$prices$bnb3","_wallet$prices$eth4","padding","border","Button","href","target","getPairPrices","bnb_busd","unipair_abi","srg_bnb","srg_abi","callsBNB","getReserves","calculatePrice","bnb_busd_reserves","srg_bnb_price","bnb_price","reserve0","reserve1","inBNB","srg_price","inSRG","eth_usdc","srg_eth","bbk_eth","bbk_abi","eth_usdc_reserves","srg_eth_price","bbk_srg_price","eth_price","inETH","console","log","KrakenTracker","_wallet$address","useDispatch","useEffect","getDexScreener","tokenList","token_info","dexscreenerChain","dexscreenerPair","axios","get","pair","interval","setInterval","clearInterval","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","_asyncToGenerator","_regeneratorRuntime","mark","_callee","providerOptions","_context","prev","next","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","abrupt","Web3Modal","disableInjectedProvider","cacheProvider","stop","apply","arguments","useWeb3Modal","_changeWeb3Modal","_callee5","web3mod","provider","_context5","sent","providerController","cachedProvider","connect","connectProvider","_connectWallet","_callee6","_context6","window","ethereum","changeWeb3Modal","accounts","chainId","subscribeProvider","getAccounts","t0","parseInt","net","getId","t1","_x","on","clearWallet","_callee2","acc","_context2","_x2","_callee3","networkId","_context3","_x3","_callee4","_context4","currentProvider","close","clearCachedProvider","ThemeProvider","CssBaseline","Router","AppBar","enableColorOnDark","Toolbar","IconButton","edge","MenuIcon","RouterLink","to","textDecoration","logo","flexGrow","getChainLogo","substr","connectWallet","Routes","Route","path","exact","element","Drawer","onClose","PaperProps","minWidth","backgroundColor","alignSelf","CloseIcon","List","button","component","ListSubheader","Link","marginRight","sx","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.cb3476a2.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#723DF4'\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo.a27f1331.svg\";","export default __webpack_public_path__ + \"static/media/logo192.34cbf51d.png\";","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decimals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Alert,\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, IconButton, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText, Snackbar,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport {copyTextToClipboard} from \"../utils\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport millify from \"millify\";\nimport {useState} from \"react\";\n\nimport token_list from \"../utils/tokenList.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    function findPair(pairs){\n\n        const pair_address = token_list.tokens[network][contract_address]?.dexscreenerPair || undefined;\n\n        if(pair_address){\n            let p = pairs[0];\n            pairs.map(pair => {\n                if(pair_address.toLowerCase() === pair.pairAddress.toLowerCase()){\n                    p = pair;\n                }\n            })\n            return p;\n        }\n\n        return pairs[0];\n    }\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={findPair(data.pairs)}\n                            network={network}\n                        />\n                        <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const [snackbarOpen, setSnackBarOpen] = useState(false);\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if (contract_address === 'native') {\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid container>\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemAvatar>\n                    <Avatar\n                        src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                    {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n                </ListItemAvatar>\n                <ListItemText\n                    primary={name}\n                    secondary={symbol}\n                />\n            </ListItem>\n        </Grid>\n        {\n            contract_address !== 'native' && <Grid item xs={12}>\n                <ListItem\n                    secondaryAction={\n                        <IconButton edge=\"end\" aria-label=\"comments\" onClick={()=>copyTextToClipboard(contract_address, ()=>setSnackBarOpen(true))}>\n                            <ContentCopyIcon />\n                        </IconButton>\n                    }>\n                    <ListItemText\n                        primary={contract_address}\n                        secondary=\"Contract Address\"\n                        primaryTypographyProps={{fontSize: '.75rem'}}\n                    />\n                </ListItem>\n            </Grid>\n        }\n        <Grid item xs={12}>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.fdv)}\n                    secondary=\"Fully Diluted Value\"\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={CoineusUSDFormat(data.priceUsd)}\n                    secondary=\"Price in USD\"\n                />\n                <ListItemText\n                    primary={CoineusCryptoFormat(data.priceNative)}\n                    secondary={`Price in ${data.quoteToken.symbol}`}\n                />\n            </ListItem>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.liquidity.usd)}\n                    secondary=\"Liquidity\"\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.base)}\n                    secondary={data.baseToken.symbol}\n                />\n                <ListItemText\n                    primary={millify(data.liquidity.quote)}\n                    secondary={data.quoteToken.symbol}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={data.priceChange.m5 + \"%\"}\n                    secondary=\"5 mins\"\n                    className={getColorClass(data.priceChange.m5)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h1 + \"%\"}\n                    secondary=\"1 hr\"\n                    className={getColorClass(data.priceChange.h1)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h6 + \"%\"}\n                    secondary=\"6 hrs\"\n                    className={getColorClass(data.priceChange.h6)}\n                />\n                <ListItemText\n                    primary={data.priceChange.h24 + \"%\"}\n                    secondary=\"24 hrs\"\n                    className={getColorClass(data.priceChange.h24)}\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={'$' + millify(data.volume.m5)}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h1)}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h6)}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={'$' + millify(data.volume.h24)}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n\n            <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n            <ListItem>\n                <ListItemText\n                    primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                    secondary=\"5 mins\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                    secondary=\"1 hr\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                    secondary=\"6 hrs\"\n                />\n                <ListItemText\n                    primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                    secondary=\"24 hrs\"\n                />\n            </ListItem>\n        </Grid>\n        <Snackbar\n            open={snackbarOpen}\n            onClose={()=>setSnackBarOpen(false)}\n            autoHideDuration={5000}\n        >\n            <Alert severity=\"success\" sx={{ width: '100%' }} variant=\"filled\">Contract Address copied to clipboard</Alert>\n        </Snackbar>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch (id) {\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span\n                                style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight: 700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity?.usd || 0)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails, detailsLabel, secondaryAction} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            wallet.staked[network][contract_address] > 0 && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Staked'\n                        secondary=\"Value\"\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(wallet.staked[network]?.[contract_address])} ${name}`}\n                        secondary={CoineusUSDFormat(wallet.staked[network]?.[contract_address] * price?.inUSD)}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            (\n                wallet.balances.fuse['0xc2E299b47398963c618De5b05C6BdeCd4cc64022'] >= 100 ||\n                wallet.balances.fuse['0x7042807d547A2de0720421a6d2f629c9EB43E73D'] >= 100\n            ) &&\n            rewards && <>\n                <ListItem secondaryAction={rewardsClaim} style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#723DF4', paddingTop: 0}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} ${detailsLabel}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        {/*<TokenInfoDialog*/}\n        {/*    contract_address={contract_address}*/}\n        {/*    wrap={wrap}*/}\n        {/*    network={network}*/}\n        {/*    open={open}*/}\n        {/*    close={() => setOpen(false)}/>*/}\n    </Paper>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        lp: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        staked: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CEUSFUSEpair: '0x3b46eFdd411cc0Db43f1BE7853727e18Cce8b85b',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n        FSBFUSEpair: '0x3df8938e749dd3a2b21fa4dd073366cb2359158a',\n        CEUSLITPair: '0x87440f829e7ed808599749630555080917c4b3d9',\n\n        ETHFUSEPair: '0x7fe1a61e4fe983d275cb5669072a9d1dee9bd45c',\n        BNBfUSDPair: '0x0df48369504825c16d3fc6a74842aef3c91e90e6',\n        BTCFUSEPair: '0x5484150682bfb3d655faff28b3ac0295ca5a1222',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        DGNXAVAXpair: '0xbcabb94006400ed84c3699728d6ecbaa06665c89',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        ETHSRGPair: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n\n        ETHFEGPair: '0x60ef1e0bf9218cdc1769a43c4b0b111ed38bb418',\n        BNBFEGPair: '0xf53a1d602281b1ce2a92a1763364d2981269a72c',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateLPInfo(state, action) {\n            if(!state.wallet.lp[action.payload.chain][action.payload.contract_address]){\n                state.wallet.lp[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.lp[action.payload.chain][action.payload.contract_address] = action.payload.lp;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updateStaked(state, action) {\n            if(!state.wallet.staked[action.payload.chain][action.payload.contract_address]){\n                state.wallet.staked[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.staked[action.payload.chain][action.payload.contract_address] = action.payload.staked;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            Object.entries(state.wallet.staked[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateLPInfo,\n    updateBalances,\n    updateStaked,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp)).catch(err=>rej(err));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\n\nimport IERC20_ABI from \"../abis/IERC20.json\";\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if (wallet_address === undefined) {\n        return;\n    }\n\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n\n    const srg_contract = new web3BSC.eth.Contract(IERC20_ABI, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    Object.entries(tokens_bnb.tokens).map( ([i,token]) => {\n        const contract =  new web3BSC.eth.Contract(IERC20_ABI, token.contract_address);\n        callsBSC.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',//srg\n            balance: srg_balance / (10 ** 9)\n        }));\n\n        Object.entries(tokens_bnb.tokens).map( ([x,token],i) => {\n            store.dispatch(updateBalances({\n                chain: 'bnb',\n                contract_address: token.contract_address,//srg\n                balance: resp[i+2] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const bbks_contract = new web3ETH.eth.Contract(coineus_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n    const srg_contract = new web3ETH.eth.Contract(coineus_abi, '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        bbks_contract.methods.balanceOf(wallet_address).call,\n        srg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    Object.entries(tokens_eth.tokens).map( ([i,token]) => {\n        const contract =  new web3ETH.eth.Contract(IERC20_ABI, token.contract_address);\n        callsETH.push(contract.methods.balanceOf(wallet_address).call);\n    })\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            bbks_balance,\n            srg_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',//bbk\n            balance: bbks_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',//srg\n            balance: srg_balance / (10 ** 9)\n        }))\n\n        Object.entries(tokens_eth.tokens).map( ([x,token],i) => {\n            store.dispatch(updateBalances({\n                chain: 'eth',\n                contract_address: token.contract_address,//srg\n                balance: resp[i+3] / (10 ** token.decimals)\n            }))\n        })\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Dialog,\n    Grid,\n    ListItem,\n    ListItemText,\n    Paper,\n    Typography,\n    DialogContent,\n    DialogActions,\n    Tabs,\n    Tab,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\n\nimport {useState} from \"react\";\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport getUserBalances from \"../utils/get_balances\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nconst holdBBKSAmount = 100;\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n    const [stakeOpen, setStakeOpen] = useState(false)\n    const [chainTab, setChainTab] = useState('bnb');\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n\n                    <Paper style={{marginTop: 10}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(\n                                    wallet.totals.bnb +\n                                    wallet.totals.eth\n                                )}\n                                secondary=\"Total Wallet Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                secondaryTypographyProps={{textAlign: 'right'}}\n                            />\n                        </ListItem>\n                    </Paper>\n\n                    <Tabs\n                        variant=\"fullWidth\"\n                        value={chainTab}\n                        onChange={(ev, val) => {\n                            setChainTab(val)\n                        }}\n                    >\n                        <Tab id=\"bnb\" value=\"bnb\" label=\"BNB\"/>\n                        <Tab id=\"eth\" value=\"eth\" label=\"ETH\"/>\n                    </Tabs>\n\n                    {\n                        chainTab === 'bnb' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.bnb)}\n                                        secondary=\"Total BNB Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*BNB*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"bnb\"\n                                name=\"BNB\"\n                                native\n                                price={wallet.prices.bnb?.native}\n                                wrap=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"\n                                name=\"SRG\"\n                                network=\"bnb\"\n                                price={wallet.prices.bnb?.[\"0x9f19c8e321bD14345b797d43E01f0eED030F5Bff\"]}\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && Object.entries(tokens_bnb.tokens).map( ([i,token]) => {\n                                     return <TokenListItem\n                                         key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"bnb\"\n                                        price={wallet.prices.bnb?.[token.contract_address]}\n                                    />\n                                })\n                            }\n\n                        </>\n                    }\n\n\n                    {\n                        chainTab === 'eth' && <>\n                            <Paper style={{marginTop: 10}}>\n                                <ListItem>\n                                    <ListItemText\n                                        primary={CoineusUSDFormat(wallet.totals.eth)}\n                                        secondary=\"Total ETH Value\"\n                                        primaryTypographyProps={{fontWeight: 700, fontSize: '1.5rem', textAlign: 'right'}}\n                                        secondaryTypographyProps={{textAlign: 'right'}}\n                                    />\n                                </ListItem>\n                            </Paper>\n\n                            {/*ETH*/}\n                            <TokenListItem\n                                contract_address=\"native\"\n                                network=\"eth\"\n                                name=\"ETH\"\n                                native\n                                price={wallet.prices.eth?.native}\n                                wrap=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                            />\n\n                            {/*SRG*/}\n                            <TokenListItem\n                                contract_address=\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"\n                                name=\"SRG\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe\"]}\n                            />\n\n                            {/*BBKS*/}\n                            <TokenListItem\n                                contract_address=\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"\n                                name=\"BBKS\"\n                                network=\"eth\"\n                                price={wallet.prices.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"]}\n                            />\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] < holdBBKSAmount && <HoldBBKS />\n                            }\n\n                            {\n                                wallet.balances.eth?.[\"0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25\"] >= holdBBKSAmount && Object.entries(tokens_eth.tokens).map( ([i,token]) => {\n                                    return <TokenListItem\n                                        key={token.contract_address}\n                                        contract_address={token.contract_address}\n                                        name={token.symbol}\n                                        network=\"eth\"\n                                        price={wallet.prices.eth?.[token.contract_address]}\n                                    />\n                                })\n                            }\n                        </>\n                    }\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}\n\nfunction HoldBBKS(){\n    return <Grid item xs={12}>\n        <Paper style={{padding: 20, border: '1px solid #723DF4', textAlign: 'center'}}>\n            <Typography style={{marginBottom:10}}>To unlock other SRG20 Tokens,<br/> you need to hold <strong>{holdBBKSAmount} BBKS</strong></Typography>\n            <Button variant=\"contained\" href=\"https://swap.surgeprotocol.io\" target=\"_blank\">Buy BBKS</Button>\n        </Paper>\n    </Grid>\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport srg_abi from \"../abis/srg_abi.json\";\nimport bbk_abi from \"../abis/bbk_abi.json\";\n\nimport tokens_bnb from \"../utils/surge_bnb.json\";\nimport tokens_eth from \"../utils/surge_eth.json\";\n\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getBNB(pairs, rpc) {\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const srg_bnb = new web3BSC.eth.Contract(srg_abi, '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff');\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        srg_bnb.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_bnb.tokens).map(([i, token]) => {\n        const contract = new web3BSC.eth.Contract(srg_abi, token.contract_address);\n        callsBNB.push(contract.methods.calculatePrice().call);\n    })\n\n    makeBatchRequest(web3BSC, callsBNB).then(resp => {\n        const [\n            bnb_busd_reserves,\n            srg_bnb_price,\n        ] = resp\n\n        const bnb_price = bnb_busd_reserves.reserve0 / bnb_busd_reserves.reserve1\n\n        //BNB\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: 'native',\n            price: {\n                inUSD: bnb_price,\n                inBNB: 1\n            }\n        }));\n\n        const srg_price = (srg_bnb_price / (10 ** 9)) * bnb_price;\n        //SRG\n        store.dispatch(updatePrices({\n            chain: 'bnb',\n            contract_address: '0x9f19c8e321bD14345b797d43E01f0eED030F5Bff',\n            price: {\n                inUSD: srg_price,\n                inSRG: 1\n            }\n        }));\n\n        Object.entries(tokens_bnb.tokens).map(([x, token], i) => {\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: token.contract_address,\n                price: {\n                    inUSD: (resp[i + 2] / (10 ** 18)) * srg_price,\n                }\n            }))\n        })\n\n        store.dispatch(updateTotals('bnb'));\n    });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const srg_eth = new web3ETH.eth.Contract(srg_abi, pairs.ETHSRGPair);\n    const bbk_eth = new web3ETH.eth.Contract(bbk_abi, '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25');\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        srg_eth.methods.calculatePrice().call,\n        bbk_eth.methods.calculatePrice().call,\n    ]\n\n    Object.entries(tokens_eth.tokens).map(([i, token]) => {\n        const contract = new web3ETH.eth.Contract(srg_abi, token.contract_address);\n        callsETH.push(contract.methods.calculatePrice().call);\n    })\n\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                srg_eth_price,\n                bbk_srg_price,\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0 / eth_usdc_reserves.reserve1 * (10 ** 12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const srg_price = (srg_eth_price / (10 ** 9)) * eth_price;\n            //SRG\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xcD682EF09d07668d49A8103ddD65Ff54AebFbfDe',\n                price: {\n                    inUSD: srg_price,\n                    inSRG: 1\n                }\n            }));\n\n            //BBK\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0xF654d4C3CC334324ad474A0d5d3708dCA4c1CB25',\n                price: {\n                    inUSD: (bbk_srg_price / (10 ** 18)) * srg_price,\n                    inSRG: (bbk_srg_price / (10 ** 18))\n                }\n            }));\n\n            Object.entries(tokens_eth.tokens).map(([x, token], i) => {\n                store.dispatch(updatePrices({\n                    chain: 'eth',\n                    contract_address: token.contract_address,\n                    price: {\n                        inUSD: (resp[i + 3] / (10 ** 18)) * srg_price,\n                    }\n                }))\n            })\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo.svg';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport getUserBalances from \"./utils/get_balances\";\n\n\nexport default function KrakenTracker() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(()=>getUserBalances(wallet.address), 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark style={{backgroundImage:'none'}}>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <Typography variant=\"h6\">KrakenTracker</Typography>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X...{wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"My Wallet\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>BBKS TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://etherscan.io/token/0xf654d4c3cc334324ad474a0d5d3708dca4c1cb25'} target=\"_blank\">\n                            <ListItemText primary=\"Contract\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://swap.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://chart.surgeprotocol.io/'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/babykrakens'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://discord.gg/MuqGcn8MRH'} target=\"_blank\">\n                            <ListItemText primary=\"Discord\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    if(token_info.dexscreenerChain && token_info.dexscreenerPair) {\n                        calls.push(axios\n                            .get(`https://api.dexscreener.com/latest/dex/pairs/${token_info.dexscreenerChain}/${token_info.dexscreenerPair}`)\n                            .then(resp => {\n                                const {pair} = resp.data;\n                                if(pair){\n                                    token_info.pair = pair;\n                                }\n                            }));\n                    }\n\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport KrakenTracker from \"./KrakenTracker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <KrakenTracker/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}